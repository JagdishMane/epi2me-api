/**
 * Copyright Metrichor Ltd. (An Oxford Nanopore Technologies Company) 2020
 */

"use strict";function e(e){return e&&"object"===typeof e&&"default"in e?e.default:e}var t=require("lodash"),s=require("rxjs"),r=e(require("graphql-tag")),o=require("apollo-cache-inmemory"),n=e(require("apollo-client")),i=require("apollo-link"),a=require("apollo-link-http"),h=require("@lifeomic/axios-fetch"),c=e(require("axios")),l=e(require("crypto")),u=require("tunnel"),p=e(require("os")),f=e(require("socket.io-client")),d="https://epi2me.nanoporetech.com",g={local:!1,url:d,user_agent:"EPI2ME API",region:"eu-west-1",sessionGrace:5,uploadTimeout:1200,downloadTimeout:1200,fileCheckInterval:5,downloadCheckInterval:3,stateCheckInterval:60,inFlightDelay:600,waitTimeSeconds:20,waitTokenError:30,transferPoolSize:3,downloadMode:"data+telemetry",filetype:[".fastq",".fq",".fastq.gz",".fq.gz"],signing:!0,sampleDirectory:"/data"};const m="\npage\npages\nhasNext\nhasPrevious\ntotalCount\n",w="\nidWorkflowInstance\nstartDate\nworkflowImage{\n  workflow\n  {\n    rev\n    name\n  }\n}\n";var y="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof window?window:"undefined"!==typeof global?global:"undefined"!==typeof self?self:{};function k(e,t,s){return e(s={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}((void 0===t||null===t)&&s.path)}},s.exports),s.exports}var v=k((function(e,t){!function(s){var r=t&&!t.nodeType&&t,o=e&&!e.nodeType&&e,n="object"==typeof y&&y;n.global!==n&&n.window!==n&&n.self!==n||(s=n);var i,a,h=2147483647,c=/^xn--/,l=/[^\x20-\x7E]/,u=/[\x2E\u3002\uFF0E\uFF61]/g,p={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},f=Math.floor,d=String.fromCharCode;function g(e){throw RangeError(p[e])}function m(e,t){for(var s=e.length,r=[];s--;)r[s]=t(e[s]);return r}function w(e,t){var s=e.split("@"),r="";return s.length>1&&(r=s[0]+"@",e=s[1]),r+m((e=e.replace(u,".")).split("."),t).join(".")}function k(e){for(var t,s,r=[],o=0,n=e.length;o<n;)(t=e.charCodeAt(o++))>=55296&&t<=56319&&o<n?56320==(64512&(s=e.charCodeAt(o++)))?r.push(((1023&t)<<10)+(1023&s)+65536):(r.push(t),o--):r.push(t);return r}function v(e){return m(e,(function(e){var t="";return e>65535&&(t+=d((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=d(e)})).join("")}function $(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function b(e,t,s){var r=0;for(e=s?f(e/700):e>>1,e+=f(e/t);e>455;r+=36)e=f(e/35);return f(r+36*e/(e+38))}function I(e){var t,s,r,o,n,i,a,c,l,u,p,d=[],m=e.length,w=0,y=128,k=72;for((s=e.lastIndexOf("-"))<0&&(s=0),r=0;r<s;++r)e.charCodeAt(r)>=128&&g("not-basic"),d.push(e.charCodeAt(r));for(o=s>0?s+1:0;o<m;){for(n=w,i=1,a=36;o>=m&&g("invalid-input"),((c=(p=e.charCodeAt(o++))-48<10?p-22:p-65<26?p-65:p-97<26?p-97:36)>=36||c>f((h-w)/i))&&g("overflow"),w+=c*i,!(c<(l=a<=k?1:a>=k+26?26:a-k));a+=36)i>f(h/(u=36-l))&&g("overflow"),i*=u;k=b(w-n,t=d.length+1,0==n),f(w/t)>h-y&&g("overflow"),y+=f(w/t),w%=t,d.splice(w++,0,y)}return v(d)}function S(e){var t,s,r,o,n,i,a,c,l,u,p,m,w,y,v,I=[];for(m=(e=k(e)).length,t=128,s=0,n=72,i=0;i<m;++i)(p=e[i])<128&&I.push(d(p));for(r=o=I.length,o&&I.push("-");r<m;){for(a=h,i=0;i<m;++i)(p=e[i])>=t&&p<a&&(a=p);for(a-t>f((h-s)/(w=r+1))&&g("overflow"),s+=(a-t)*w,t=a,i=0;i<m;++i)if((p=e[i])<t&&++s>h&&g("overflow"),p==t){for(c=s,l=36;!(c<(u=l<=n?1:l>=n+26?26:l-n));l+=36)v=c-u,y=36-u,I.push(d($(u+v%y,0))),c=f(v/y);I.push(d($(c,0))),n=b(s,w,r==o),s=0,++r}++s,++t}return I.join("")}if(i={version:"1.3.2",ucs2:{decode:k,encode:v},decode:I,encode:S,toASCII:function(e){return w(e,(function(e){return l.test(e)?"xn--"+S(e):e}))},toUnicode:function(e){return w(e,(function(e){return c.test(e)?I(e.slice(4).toLowerCase()):e}))}},r&&o)if(e.exports==r)o.exports=i;else for(a in i)i.hasOwnProperty(a)&&(r[a]=i[a]);else s.punycode=i}(y)}));function $(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var b=function(e,t,s,r){t=t||"&",s=s||"=";var o={};if("string"!==typeof e||0===e.length)return o;var n=/\+/g;e=e.split(t);var i=1e3;r&&"number"===typeof r.maxKeys&&(i=r.maxKeys);var a=e.length;i>0&&a>i&&(a=i);for(var h=0;h<a;++h){var c,l,u,p,f=e[h].replace(n,"%20"),d=f.indexOf(s);d>=0?(c=f.substr(0,d),l=f.substr(d+1)):(c=f,l=""),u=decodeURIComponent(c),p=decodeURIComponent(l),$(o,u)?Array.isArray(o[u])?o[u].push(p):o[u]=[o[u],p]:o[u]=p}return o},I=function(e){switch(typeof e){case"string":return e;case"boolean":return e?"true":"false";case"number":return isFinite(e)?e:"";default:return""}},S=function(e,t,s,r){return t=t||"&",s=s||"=",null===e&&(e=void 0),"object"===typeof e?Object.keys(e).map((function(r){var o=encodeURIComponent(I(r))+s;return Array.isArray(e[r])?e[r].map((function(e){return o+encodeURIComponent(I(e))})).join(t):o+encodeURIComponent(I(e[r]))})).join(t):r?encodeURIComponent(I(r))+s+encodeURIComponent(I(e)):""},j=k((function(e,t){t.decode=t.parse=b,t.encode=t.stringify=S})),x=function(e,t){return U(e,!1,!0).resolve(t)};function E(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var P=/^([a-z0-9.+-]+:)/i,T=/:[0-9]*$/,O=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),_=["'"].concat(O),A=["%","/","?",";","#"].concat(_),q=["/","?","#"],C=/^[a-z0-9A-Z_-]{0,63}$/,W=/^([a-z0-9A-Z_-]{0,63})(.*)$/,R={javascript:!0,"javascript:":!0},D={javascript:!0,"javascript:":!0},H={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};function U(e,t,s){if(e&&z(e)&&e instanceof E)return e;var r=new E;return r.parse(e,t,s),r}function N(e){return"string"===typeof e}function z(e){return"object"===typeof e&&null!==e}function M(e){return null===e}E.prototype.parse=function(e,t,s){if(!N(e))throw new TypeError("Parameter 'url' must be a string, not "+typeof e);var r=e;r=r.trim();var o=P.exec(r);if(o){var n=(o=o[0]).toLowerCase();this.protocol=n,r=r.substr(o.length)}if(s||o||r.match(/^\/\/[^@\/]+@[^@\/]+/)){var i="//"===r.substr(0,2);!i||o&&D[o]||(r=r.substr(2),this.slashes=!0)}if(!D[o]&&(i||o&&!H[o])){for(var a,h,c=-1,l=0;l<q.length;l++){-1!==(u=r.indexOf(q[l]))&&(-1===c||u<c)&&(c=u)}-1!==(h=-1===c?r.lastIndexOf("@"):r.lastIndexOf("@",c))&&(a=r.slice(0,h),r=r.slice(h+1),this.auth=decodeURIComponent(a)),c=-1;for(l=0;l<A.length;l++){var u;-1!==(u=r.indexOf(A[l]))&&(-1===c||u<c)&&(c=u)}-1===c&&(c=r.length),this.host=r.slice(0,c),r=r.slice(c),this.parseHost(),this.hostname=this.hostname||"";var p="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!p)for(var f=this.hostname.split(/\./),d=(l=0,f.length);l<d;l++){var g=f[l];if(g&&!g.match(C)){for(var m="",w=0,y=g.length;w<y;w++)g.charCodeAt(w)>127?m+="x":m+=g[w];if(!m.match(C)){var k=f.slice(0,l),$=f.slice(l+1),b=g.match(W);b&&(k.push(b[1]),$.unshift(b[2])),$.length&&(r="/"+$.join(".")+r),this.hostname=k.join(".");break}}}if(this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),!p){var I=this.hostname.split("."),S=[];for(l=0;l<I.length;++l){var x=I[l];S.push(x.match(/[^A-Za-z0-9_-]/)?"xn--"+v.encode(x):x)}this.hostname=S.join(".")}var E=this.port?":"+this.port:"",T=this.hostname||"";this.host=T+E,this.href+=this.host,p&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==r[0]&&(r="/"+r))}if(!R[n])for(l=0,d=_.length;l<d;l++){var O=_[l],U=encodeURIComponent(O);U===O&&(U=escape(O)),r=r.split(O).join(U)}var z=r.indexOf("#");-1!==z&&(this.hash=r.substr(z),r=r.slice(0,z));var M=r.indexOf("?");if(-1!==M?(this.search=r.substr(M),this.query=r.substr(M+1),t&&(this.query=j.parse(this.query)),r=r.slice(0,M)):t&&(this.search="",this.query={}),r&&(this.pathname=r),H[n]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){E=this.pathname||"",x=this.search||"";this.path=E+x}return this.href=this.format(),this},E.prototype.format=function(){var e=this.auth||"";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,":"),e+="@");var t=this.protocol||"",s=this.pathname||"",r=this.hash||"",o=!1,n="";this.host?o=e+this.host:this.hostname&&(o=e+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(o+=":"+this.port)),this.query&&z(this.query)&&Object.keys(this.query).length&&(n=j.stringify(this.query));var i=this.search||n&&"?"+n||"";return t&&":"!==t.substr(-1)&&(t+=":"),this.slashes||(!t||H[t])&&!1!==o?(o="//"+(o||""),s&&"/"!==s.charAt(0)&&(s="/"+s)):o||(o=""),r&&"#"!==r.charAt(0)&&(r="#"+r),i&&"?"!==i.charAt(0)&&(i="?"+i),t+o+(s=s.replace(/[?#]/g,(function(e){return encodeURIComponent(e)})))+(i=i.replace("#","%23"))+r},E.prototype.resolve=function(e){return this.resolveObject(U(e,!1,!0)).format()},E.prototype.resolveObject=function(e){if(N(e)){var t=new E;t.parse(e,!1,!0),e=t}var s=new E;if(Object.keys(this).forEach((function(e){s[e]=this[e]}),this),s.hash=e.hash,""===e.href)return s.href=s.format(),s;if(e.slashes&&!e.protocol)return Object.keys(e).forEach((function(t){"protocol"!==t&&(s[t]=e[t])})),H[s.protocol]&&s.hostname&&!s.pathname&&(s.path=s.pathname="/"),s.href=s.format(),s;if(e.protocol&&e.protocol!==s.protocol){if(!H[e.protocol])return Object.keys(e).forEach((function(t){s[t]=e[t]})),s.href=s.format(),s;if(s.protocol=e.protocol,e.host||D[e.protocol])s.pathname=e.pathname;else{for(var r=(e.pathname||"").split("/");r.length&&!(e.host=r.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),""!==r[0]&&r.unshift(""),r.length<2&&r.unshift(""),s.pathname=r.join("/")}if(s.search=e.search,s.query=e.query,s.host=e.host||"",s.auth=e.auth,s.hostname=e.hostname||e.host,s.port=e.port,s.pathname||s.search){var o=s.pathname||"",n=s.search||"";s.path=o+n}return s.slashes=s.slashes||e.slashes,s.href=s.format(),s}var i=s.pathname&&"/"===s.pathname.charAt(0),a=e.host||e.pathname&&"/"===e.pathname.charAt(0),h=a||i||s.host&&e.pathname,c=h,l=s.pathname&&s.pathname.split("/")||[],u=(r=e.pathname&&e.pathname.split("/")||[],s.protocol&&!H[s.protocol]);if(u&&(s.hostname="",s.port=null,s.host&&(""===l[0]?l[0]=s.host:l.unshift(s.host)),s.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(""===r[0]?r[0]=e.host:r.unshift(e.host)),e.host=null),h=h&&(""===r[0]||""===l[0])),a)s.host=e.host||""===e.host?e.host:s.host,s.hostname=e.hostname||""===e.hostname?e.hostname:s.hostname,s.search=e.search,s.query=e.query,l=r;else if(r.length)l||(l=[]),l.pop(),l=l.concat(r),s.search=e.search,s.query=e.query;else if(null!=e.search){if(u)s.hostname=s.host=l.shift(),(m=!!(s.host&&s.host.indexOf("@")>0)&&s.host.split("@"))&&(s.auth=m.shift(),s.host=s.hostname=m.shift());return s.search=e.search,s.query=e.query,M(s.pathname)&&M(s.search)||(s.path=(s.pathname?s.pathname:"")+(s.search?s.search:"")),s.href=s.format(),s}if(!l.length)return s.pathname=null,s.search?s.path="/"+s.search:s.path=null,s.href=s.format(),s;for(var p=l.slice(-1)[0],f=(s.host||e.host)&&("."===p||".."===p)||""===p,d=0,g=l.length;g>=0;g--)"."==(p=l[g])?l.splice(g,1):".."===p?(l.splice(g,1),d++):d&&(l.splice(g,1),d--);if(!h&&!c)for(;d--;d)l.unshift("..");!h||""===l[0]||l[0]&&"/"===l[0].charAt(0)||l.unshift(""),f&&"/"!==l.join("/").substr(-1)&&l.push("");var m,w=""===l[0]||l[0]&&"/"===l[0].charAt(0);u&&(s.hostname=s.host=w?"":l.length?l.shift():"",(m=!!(s.host&&s.host.indexOf("@")>0)&&s.host.split("@"))&&(s.auth=m.shift(),s.host=s.hostname=m.shift()));return(h=h||s.host&&l.length)&&!w&&l.unshift(""),l.length?s.pathname=l.join("/"):(s.pathname=null,s.path=null),M(s.pathname)&&M(s.search)||(s.path=(s.pathname?s.pathname:"")+(s.search?s.search:"")),s.auth=e.auth||s.auth,s.slashes=s.slashes||e.slashes,s.href=s.format(),s},E.prototype.parseHost=function(){var e=this.host,t=T.exec(e);t&&(":"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)};const F=function(){const e=(e,t)=>{e.headers||(e.headers={});let s=t;if(s||(s={}),!s.apikey||!s.apisecret)return;e.headers["X-EPI2ME-APIKEY"]=s.apikey,e.headers["X-EPI2ME-SIGNATUREDATE"]=(new Date).toISOString();const r=[Object.keys(e.headers).sort().filter(e=>e.match(/^x-epi2me/i)).map(t=>`${t}:${e.headers[t]}`).join("\n"),e.body].join("\n"),o=l.createHmac("sha1",s.apisecret).update(r).digest("hex");e.headers["X-EPI2ME-SIGNATUREV0"]=o};return{version:"3.0.1759",setHeaders:(s,r)=>{const{log:o}=t.merge({log:{debug:()=>{}}},r);let n=r;if(n||(n={}),s.headers=t.merge({Accept:"application/json","Content-Type":"application/json","X-EPI2ME-CLIENT":n.user_agent||"api","X-EPI2ME-VERSION":n.agent_version||F.version},s.headers,n.headers),"signing"in n&&!n.signing||e(s,n),n.proxy){const e=n.proxy.match(/https?:\/\/((\S+):(\S+)@)?(\S+):(\d+)/),t=e[2],r=e[3],i={host:e[4],port:e[5]};t&&r&&(i.proxyAuth=`${t}:${r}`),n.proxy.match(/^https/)?(o.debug("using HTTPS over HTTPS proxy",JSON.stringify(i)),s.httpsAgent=u.httpsOverHttps({proxy:i})):(o.debug("using HTTPS over HTTP proxy",JSON.stringify(i)),s.httpsAgent=u.httpsOverHttp({proxy:i})),s.proxy=!1}}}}(),B=h.buildAxiosFetch(c),J=(e,t)=>{const{apikey:s,apisecret:r}=t.headers.keys;return delete t.headers.keys,F.setHeaders(t,{apikey:s,apisecret:r,signing:!0}),B(e,t)},L=new n({link:new i.ApolloLink(e=>{const{apikey:t,apisecret:s,url:r}=e.getContext(),o=a.createHttpLink({uri:x(r,"/graphql"),fetch:J,headers:{keys:{apikey:t,apisecret:s}}});return i.execute(o,e)}),cache:new o.InMemoryCache});c.defaults.validateStatus=e=>e<=504;const X=function(){const e=(e,t)=>{e.headers||(e.headers={});let s=t;if(s||(s={}),!s.apikey)return;if(e.headers["X-EPI2ME-ApiKey"]=s.apikey,!s.apisecret)return;e.headers["X-EPI2ME-SignatureDate"]=(new Date).toISOString(),e.url.match(/^https:/)&&(e.url=e.url.replace(/:443/,"")),e.url.match(/^http:/)&&(e.url=e.url.replace(/:80/,""));const r=[e.url,Object.keys(e.headers).sort().filter(e=>e.match(/^x-epi2me/i)).map(t=>`${t}:${e.headers[t]}`).join("\n")].join("\n"),o=l.createHmac("sha1",s.apisecret).update(r).digest("hex");e.headers["X-EPI2ME-SignatureV0"]=o},s=async e=>{const t=e?e.data:null;if(!t)return Promise.reject(new Error("unexpected non-json response"));if(e&&e.status>=400){let s=`Network error ${e.status}`;return t.error&&(s=t.error),504===e.status&&(s="Please check your network connection and try again."),Promise.reject(new Error(s))}return t.error?Promise.reject(new Error(t.error)):Promise.resolve(t)};return{version:"3.0.1759",headers:(s,r)=>{const{log:o}=t.merge({log:{debug:()=>{}}},r);let n=r;if(n||(n={}),s.headers=t.merge({Accept:"application/json","Content-Type":"application/json","X-EPI2ME-Client":n.user_agent||"api","X-EPI2ME-Version":n.agent_version||X.version},s.headers,n.headers),"signing"in n&&!n.signing||e(s,n),n.proxy){const e=n.proxy.match(/https?:\/\/((\S+):(\S+)@)?(\S+):(\d+)/),t=e[2],r=e[3],i={host:e[4],port:e[5]};t&&r&&(i.proxyAuth=`${t}:${r}`),n.proxy.match(/^https/)?(o.debug("using HTTPS over HTTPS proxy",JSON.stringify(i)),s.httpsAgent=u.httpsOverHttps({proxy:i})):(o.debug("using HTTPS over HTTP proxy",JSON.stringify(i)),s.httpsAgent=u.httpsOverHttp({proxy:i})),s.proxy=!1}},head:async(e,s)=>{const{log:r}=t.merge({log:{debug:()=>{}}},s);let o,n=s.url,i=e;s.skip_url_mangle?o=i:(i=`/${i}`,n=n.replace(/\/+$/,""),i=i.replace(/\/+/g,"/"),o=n+i);const a={url:o,gzip:!0};let h;X.headers(a,s);try{if(r.debug(`HEAD ${a.url}`),h=await c.head(a.url,a),h&&h.status>=400){let e=`Network error ${h.status}`;return 504===h.status&&(e="Please check your network connection and try again."),Promise.reject(new Error(e))}}catch(l){return Promise.reject(l)}return Promise.resolve(h)},get:async(e,r)=>{const{log:o}=t.merge({log:{debug:()=>{}}},r);let n,i=r.url,a=e;r.skip_url_mangle?n=a:(a=`/${a}`,i=i.replace(/\/+$/,""),a=a.replace(/\/+/g,"/"),n=i+a);const h={url:n,gzip:!0};let l;X.headers(h,r);try{o.debug(`GET ${h.url}`),l=await c.get(h.url,h)}catch(u){return Promise.reject(u)}return s(l,r)},post:async(e,r,o)=>{const{log:n}=t.merge({log:{debug:()=>{}}},o);let i=o.url;i=i.replace(/\/+$/,"");const a={url:`${i}/${e.replace(/\/+/g,"/")}`,gzip:!0,data:r,headers:{}};if(o.legacy_form){const e=[],s=t.merge({json:JSON.stringify(r)},r);Object.keys(s).sort().forEach(t=>{e.push(`${t}=${escape(s[t])}`)}),a.data=e.join("&"),a.headers["Content-Type"]="application/x-www-form-urlencoded"}X.headers(a,o);const{data:h}=a;let l;delete a.data;try{n.debug(`POST ${a.url}`),l=await c.post(a.url,h,a)}catch(u){return Promise.reject(u)}return o.handler?o.handler(l):s(l,o)},put:async(e,r,o,n)=>{const{log:i}=t.merge({log:{debug:()=>{}}},n);let a=n.url;a=a.replace(/\/+$/,"");const h={url:`${a}/${e.replace(/\/+/g,"/")}/${r}`,gzip:!0,data:o,headers:{}};if(n.legacy_form){const e=[],s=t.merge({json:JSON.stringify(o)},o);Object.keys(s).sort().forEach(t=>{e.push(`${t}=${escape(s[t])}`)}),h.data=e.join("&"),h.headers["Content-Type"]="application/x-www-form-urlencoded"}X.headers(h,n);const{data:l}=h;let u;delete h.data;try{i.debug(`PUT ${h.url}`),u=await c.put(h.url,l,h)}catch(p){return Promise.reject(p)}return s(u,n)},convertResponseToObject(e){if("object"===typeof e)return e;try{return JSON.parse(e)}catch(t){throw new Error(`exception parsing chain JSON ${String(t)}`)}}}}();class G{constructor(e){this.createContext=e=>{const{apikey:s,apisecret:r,url:o}=this.options;return t.merge({apikey:s,apisecret:r,url:o},e)},this.query=e=>({context:t={},variables:s={},options:o={}}={})=>{const n=this.createContext(t);let i;return i="string"===typeof e?r`
        ${e}
      `:"function"===typeof e?r`
        ${e(m)}
      `:e,this.client.query(Object.assign(Object.assign({query:i,variables:s},o),{context:n}))},this.mutate=e=>({context:t={},variables:s={},options:o={}}={})=>{const n=this.createContext(t);let i;return i="string"===typeof e?r`
        ${e}
      `:e,this.client.mutate(Object.assign(Object.assign({mutation:i,variables:s},o),{context:n}))},this.resetCache=()=>{this.client.resetStore()},this.workflows=this.query(r`
    query allWorkflows($page: Int, $pageSize: Int, $isActive: Int, $orderBy: String, $region: String) {
      allWorkflows(page: $page, pageSize: $pageSize, isActive: $isActive, orderBy: $orderBy, region: $region) {
        ${m}
        results {
          ${"\nidWorkflow\nname\ndescription\nsummary\nrev\n"}
        }
      }
    }
  `),this.workflowPages=async e=>{let t=e,s=await this.workflows({variables:{page:t}});const r=async e=>(t=e,s=await this.workflows({variables:{page:t}}),s);return{data:s,next:()=>r(t+1),previous:()=>r(t-1),first:()=>r(1),last:()=>r(0)}},this.workflow=this.query(r`
    query workflow($idWorkflow: ID!) {
      workflow(idWorkflow: $idWorkflow) {
        ${"\nidWorkflow\nname\ndescription\nsummary\nrev\n"}
      }
    }
   `),this.workflowInstances=this.query(r`
  query allWorkflowInstances($page: Int, $pageSize: Int, $shared: Boolean, $idUser: ID, $orderBy: String) {
    allWorkflowInstances(page: $page, pageSize: $pageSize, shared: $shared, idUser: $idUser, orderBy: $orderBy) {
      ${m}
      results {
        ${w}
      }
    }
  }
   `),this.workflowInstance=this.query(r`
      query workflowInstance($idWorkflowInstance: ID!) {
        workflowInstance(idWorkflowInstance: $idWorkflowInstance) {
          ${w}
        }
      }
   `),this.startWorkflow=this.mutate(r`
    mutation startWorkflow(
      $idWorkflow: ID!
      $computeAccountId: ID!
      $storageAccountId: ID
      $isConsentedHuman: Boolean = false
      $idDataset: ID
      $storeResults: Boolean = false
      $userDefined: GenericScalar
      $instanceAttributes: [GenericScalar]
      $region: String
    ) {
      startData: startWorkflowInstance(
        idWorkflow: $idWorkflow
        computeAccountId: $computeAccountId
        storageAccountId: $storageAccountId
        isConsentedHuman: $isConsentedHuman
        idDataset: $idDataset
        storeResults: $storeResults
        userDefined: $userDefined
        instanceAttributes: $instanceAttributes
        region: $region
      ) {
        bucket
        idUser
        remoteAddr
        instance {
          idWorkflowInstance
          chain
          keyId
          outputqueue
          mappedTelemetry
          workflowImage {
            inputqueue
            workflow {
              idWorkflow
            }
            region {
              name
            }
          }
        }
      }
    }
  `),this.stopWorkflow=this.mutate(r`
    mutation stopWorkflowInstance($idWorkflowInstance: ID!) {
      stopData: stopWorkflowInstance(idWorkflowInstance: $idWorkflowInstance) {
        success
        message
      }
    }
  `),this.instanceToken=this.mutate(r`
    mutation getInstanceToken($idWorkflowInstance: ID!) {
      token: getInstanceToken(idWorkflowInstance: $idWorkflowInstance) {
        id_workflow_instance: idWorkflowInstance
        accessKeyId
        secretAccessKey
        sessionToken
        expiration
        region
      }
    }
  `),this.user=this.query(r`
    query user {
      me {
        username
        realname
        useraccountSet {
          idUserAccount
        }
      }
    }
  `),this.updateUser=this.mutate(r`
    mutation updateUser($idRegionPreferred: ID!) {
      updateUser(idRegionPreferred: $idRegionPreferred) {
        idRegionPreferred
      }
    }
  `),this.register=this.mutate(r`
    mutation registerToken($code: String!, $description: String) {
      registerToken(code: $code, description: $description) {
        apikey
        apisecret
        description
      }
    }
  `),this.status=this.query(r`
    query status {
      status {
        portalVersion
        remoteAddr
        serverTime
        minimumAgent
        dbVersion
      }
    }
  `),this.healthCheck=()=>X.get("/status",Object.assign(Object.assign({},this.options),{log:{debug:()=>{}}})),this.regions=this.query(r`
    query regions {
      regions {
        idRegion
        description
        name
      }
    }
  `),this.options=t.assign({agent_version:X.version,local:!1,url:d,user_agent:"EPI2ME API",signing:!0},e),this.options.url=this.options.url.replace(/:\/\//,"://graphql."),this.options.url=this.options.url.replace(/\/$/,""),this.log=this.options.log,this.client=L}}const K=(e,t)=>{const s=["","K","M","G","T","P","E","Z"];let r=t||0,o=e||0;return o>=1e3?(o/=1e3,r+=1,r>=s.length?"???":K(o,r)):0===r?`${o}${s[r]}`:`${o.toFixed(1)}${s[r]}`};class Q{constructor(e){this.options=t.assign({agent_version:X.version,local:!1,url:d,user_agent:"EPI2ME API",signing:!0},e),this.log=this.options.log,this.cachedResponses={}}async list(e){const t=e.match(/^[a-z_]+/i)[0];return X.get(e,this.options).then(e=>e[`${t}s`])}async read(e,t){return X.get(`${e}/${t}`,this.options)}async user(){return this.options.local?{accounts:[{id_user_account:"none",number:"NONE",name:"None"}]}:X.get("user",this.options)}async status(){return X.get("status",this.options)}async jwt(){return X.post("authenticate",{},t.merge({handler:e=>e.headers["x-epi2me-jwt"]?Promise.resolve(e.headers["x-epi2me-jwt"]):Promise.reject(new Error("failed to fetch JWT"))},this.options))}async instanceToken(e,s){return X.post("token",t.merge(s,{id_workflow_instance:e}),t.assign({},this.options,{legacy_form:!0}))}async installToken(e){return X.post("token/install",{id_workflow:e},t.assign({},this.options,{legacy_form:!0}))}async attributes(){return this.list("attribute")}async workflows(){return this.list("workflow")}async amiImages(){if(this.options.local)throw new Error("amiImages unsupported in local mode");return this.list("ami_image")}async amiImage(e,t){let s,r,o;if(e&&t instanceof Object?(s=e,r=t,o="update"):e instanceof Object&&!t?(r=e,o="create"):(o="read",s=e),this.options.local)throw new Error("ami_image unsupported in local mode");if("update"===o)return X.put("ami_image",s,r,this.options);if("create"===o)return X.post("ami_image",r,this.options);if(!s)throw new Error("no id_ami_image specified");return this.read("ami_image",s)}async workflow(e,s,r){let o,n,i,a;if(e&&s&&r instanceof Function?(o=e,n=s,i=r,a="update"):e&&s instanceof Object&&!(s instanceof Function)?(o=e,n=s,a="update"):e instanceof Object&&s instanceof Function?(n=e,i=s,a="create"):e instanceof Object&&!s?(n=e,a="create"):(a="read",o=e,i=s instanceof Function?s:null),"update"===a)try{const e=await X.put("workflow",o,n,this.options);return i?i(null,e):Promise.resolve(e)}catch(u){return i?i(u):Promise.reject(u)}if("create"===a)try{const e=await X.post("workflow",n,this.options);return i?i(null,e):Promise.resolve(e)}catch(u){return i?i(u):Promise.reject(u)}if(!o){const e=new Error("no workflow id specified");return i?i(e):Promise.reject(e)}const h={};try{const e=await this.read("workflow",o);if(e.error)throw new Error(e.error);t.merge(h,e)}catch(u){return this.log.error(`${o}: error fetching workflow ${String(u)}`),i?i(u):Promise.reject(u)}t.merge(h,{params:{}});try{const e=await X.get(`workflow/config/${o}`,this.options);if(e.error)throw new Error(e.error);t.merge(h,e)}catch(u){return this.log.error(`${o}: error fetching workflow config ${String(u)}`),i?i(u):Promise.reject(u)}const c=t.filter(h.params,{widget:"ajax_dropdown"}),l=[...c.map((e,t)=>{const s=c[t];return new Promise((e,t)=>{const r=s.values.source.replace("{{EPI2ME_HOST}}","").replace(/&?apikey=\{\{EPI2ME_API_KEY\}\}/,"");X.get(r,this.options).then(t=>{const r=t[s.values.data_root];return r&&(s.values=r.map(e=>({label:e[s.values.items.label_key],value:e[s.values.items.value_key]}))),e()}).catch(e=>(this.log.error(`failed to fetch ${r}`),t(e)))})})];try{return await Promise.all(l),i?i(null,h):Promise.resolve(h)}catch(u){return this.log.error(`${o}: error fetching config and parameters ${String(u)}`),i?i(u):Promise.reject(u)}}async startWorkflow(e){return X.post("workflow_instance",e,t.assign({},this.options,{legacy_form:!0}))}async stopWorkflow(e){return X.put("workflow_instance/stop",e,null,t.assign({},this.options,{legacy_form:!0}))}async workflowInstances(e){return e&&e.run_id?X.get(`workflow_instance/wi?show=all&columns[0][name]=run_id;columns[0][searchable]=true;columns[0][search][regex]=true;columns[0][search][value]=${e.run_id};`,this.options).then(e=>e.data.map(e=>({id_workflow_instance:e.id_ins,id_workflow:e.id_flo,run_id:e.run_id,description:e.desc,rev:e.rev}))):this.list("workflow_instance")}async workflowInstance(e){return this.read("workflow_instance",e)}async workflowConfig(e){return X.get(`workflow/config/${e}`,this.options)}async register(e,s){return X.put("reg",e,{description:s||`${p.userInfo().username}@${p.hostname()}`},t.assign({},this.options,{signing:!1}))}async datasets(e){let t=e;return t||(t={}),t.show||(t.show="mine"),this.list(`dataset?show=${t.show}`)}async dataset(e){return this.options.local?this.datasets().then(t=>t.find(t=>t.id_dataset===e)):this.read("dataset",e)}async fetchContent(e){const s=t.assign({},this.options,{skip_url_mangle:!0,headers:{"Content-Type":""}});let r;try{if(r=(await X.head(e,s)).headers.etag,r&&this.cachedResponses[e]&&this.cachedResponses[e].etag===r)return this.cachedResponses[e].response}catch(n){this.log.warn(`Failed to HEAD request ${e}: ${String(n)}`)}const o=await X.get(e,s);return r&&(this.cachedResponses[e]={etag:r,response:o}),o}}class V{constructor(e,s){this.debounces={},this.debounceWindow=t.merge({debounceWindow:2e3},s).debounceWindow,this.log=t.merge({log:{debug:()=>{}}},s).log,e.jwt().then(e=>{this.socket=f(s.url,{transportOptions:{polling:{extraHeaders:{Cookie:`x-epi2me-jwt=${e}`}}}}),this.socket.on("connect",()=>{this.log.debug("socket ready")})}).catch(e=>{this.log.error("socket connection failed - JWT authentication error")})}debounce(e,s){const r=t.merge(e)._uuid;if(r){if(this.debounces[r])return;this.debounces[r]=1,setTimeout(()=>{delete this.debounces[r]},this.debounceWindow)}s&&s(e)}watch(e,t){if(!this.socket)return this.log.debug(`socket not ready. requeueing watch on ${e}`),void setTimeout(()=>{this.watch(e,t)},1e3);this.socket.on(e,e=>this.debounce(e,t))}emit(e,t){if(!this.socket)return this.log.debug(`socket not ready. requeueing emit on ${e}`),void setTimeout(()=>{this.emit(e,t)},1e3);this.log.debug(`socket emit ${e} ${JSON.stringify(t)}`),this.socket.emit(e,t)}}class Z{constructor(e){let r;if(r="string"===typeof e||"object"===typeof e&&e.constructor===String?JSON.parse(e):e||{},r.endpoint&&(r.url=r.endpoint,delete r.endpoint),r.log){if(!t.every([r.log.info,r.log.warn,r.log.error,r.log.debug,r.log.json],t.isFunction))throw new Error("expected log object to have error, debug, info, warn and json methods");this.log=r.log}else this.log={info:e=>{console.info(`[${(new Date).toISOString()}] INFO: ${e}`)},debug:e=>{console.debug(`[${(new Date).toISOString()}] DEBUG: ${e}`)},warn:e=>{console.warn(`[${(new Date).toISOString()}] WARN: ${e}`)},error:e=>{console.error(`[${(new Date).toISOString()}] ERROR: ${e}`)},json:e=>{console.log(JSON.stringify(e))}};this.stopped=!0,this.uploadState$=new s.BehaviorSubject(!1),this.analyseState$=new s.BehaviorSubject(!1),this.reportState$=new s.BehaviorSubject(!1),this.instanceTelemetry$=new s.BehaviorSubject(null),this.experimentalWorkerStatus$=new s.BehaviorSubject(null),this.runningStates$=s.combineLatest(this.uploadState$,this.analyseState$,this.reportState$),this.states={upload:{filesCount:0,success:{files:0,bytes:0,reads:0},types:{},niceTypes:"",progress:{bytes:0,total:0}},download:{progress:{},success:{files:0,reads:0,bytes:0},fail:0,types:{},niceTypes:""},warnings:[]},this.liveStates$=new s.BehaviorSubject(this.states),this.config={options:t.defaults(r,g),instance:{id_workflow_instance:r.id_workflow_instance,inputQueueName:null,outputQueueName:null,outputQueueURL:null,discoverQueueCache:{},bucket:null,bucketFolder:null,remote_addr:null,chain:null,key_id:null}},this.config.instance.awssettings={region:this.config.options.region},this.REST=new Q(t.merge({log:this.log},this.config.options)),this.graphQL=new G(t.merge({log:this.log},this.config.options)),this.timers={downloadCheckInterval:null,stateCheckInterval:null,fileCheckInterval:null,transferTimeouts:{},visibilityIntervals:{},summaryTelemetryInterval:null}}async socket(){if(this.mySocket)return this.mySocket;this.mySocket=new V(this.REST,t.merge({log:this.log},this.config.options));const{id_workflow_instance:e}=this.config.instance;return e&&this.mySocket.watch(`workflow_instance:state:${e}`,e=>{const{instance:t}=this.config;if(t){const{summaryTelemetry:s}=t,r=Object.entries(t.chain.components).sort((e,t)=>e[0]-t[0]).reduce((t,r)=>{const[o,n]=r;if(!e[o])return t;const i=+o,a=i&&Object.keys(s[n.wid])[0]||"ROOT",[h,c,l]=e[o].split(",").map(e=>Math.max(0,+e));return[...t,{running:h,complete:c,error:l,step:i,name:a}]},[]);this.experimentalWorkerStatus$.next(r)}}),this.mySocket}async realtimeFeedback(e,t){(await this.socket()).emit(e,t)}stopTimer(e){this.timers[e]&&(this.log.debug(`clearing ${e} interval`),clearInterval(this.timers[e]),this.timers[e]=null)}async stopAnalysis(){this.stopUpload(),this.stopped=!0;const{id_workflow_instance:e}=this.config.instance;if(e){try{this.config.options.graphQL?await this.graphQL.stopWorkflow({variables:{idWorkflowInstance:e}}):await this.REST.stopWorkflow(e),this.analyseState$.next(!1)}catch(t){return this.log.error(`Error stopping instance: ${String(t)}`),Promise.reject(t)}this.log.info(`workflow instance ${e} stopped`)}return Promise.resolve()}async stopUpload(){this.log.debug("stopping watchers"),["stateCheckInterval","fileCheckInterval"].forEach(e=>this.stopTimer(e)),this.uploadState$.next(!1)}async stopEverything(){this.stopAnalysis(),Object.keys(this.timers.transferTimeouts).forEach(e=>{this.log.debug(`clearing transferTimeout for ${e}`),clearTimeout(this.timers.transferTimeouts[e]),delete this.timers.transferTimeouts[e]}),Object.keys(this.timers.visibilityIntervals).forEach(e=>{this.log.debug(`clearing visibilityInterval for ${e}`),clearInterval(this.timers.visibilityIntervals[e]),delete this.timers.visibilityIntervals[e]}),this.downloadWorkerPool&&(this.log.debug("clearing downloadWorkerPool"),await Promise.all(Object.values(this.downloadWorkerPool)),this.downloadWorkerPool=null),["summaryTelemetryInterval","downloadCheckInterval"].forEach(e=>this.stopTimer(e))}reportProgress(){const{upload:e,download:t}=this.states;this.log.json({progress:{download:t,upload:e}})}storeState(e,t,s,r){const o=r||{};this.states[e]||(this.states[e]={}),this.states[e][t]||(this.states[e][t]={}),"incr"===s?Object.keys(o).forEach(s=>{this.states[e][t][s]=this.states[e][t][s]?this.states[e][t][s]+parseInt(o[s],10):parseInt(o[s],10)}):Object.keys(o).forEach(s=>{this.states[e][t][s]=this.states[e][t][s]?this.states[e][t][s]-parseInt(o[s],10):-parseInt(o[s],10)});try{this.states[e].success.niceReads=K(this.states[e].success.reads)}catch(i){this.states[e].success.niceReads=0}try{this.states[e].progress.niceSize=K(this.states[e].success.bytes+this.states[e].progress.bytes||0)}catch(i){this.states[e].progress.niceSize=0}try{this.states[e].success.niceSize=K(this.states[e].success.bytes)}catch(i){this.states[e].success.niceSize=0}this.states[e].niceTypes=Object.keys(this.states[e].types||{}).sort().map(t=>`${this.states[e].types[t]} ${t}`).join(", ");const n=Date.now();(!this.stateReportTime||n-this.stateReportTime>2e3)&&(this.stateReportTime=n,this.reportProgress()),this.liveStates$.next(Object.assign({},this.states))}uploadState(e,t,s){return this.storeState("upload",e,t,s)}downloadState(e,t,s){return this.storeState("download",e,t,s)}url(){return this.config.options.url}apikey(){return this.config.options.apikey}attr(e,t){if(!(e in this.config.options))throw new Error(`config object does not contain property ${e}`);return t?(this.config.options[e]=t,this):this.config.options[e]}stats(e){return this.states[e]}}Z.version=X.version,Z.Profile=class{constructor(e){this.allProfileData={},this.defaultEndpoint=process.env.METRICHOR||g.url,e&&(this.allProfileData=t.merge({profiles:{}},e)),this.allProfileData.endpoint&&(this.defaultEndpoint=this.allProfileData.endpoint)}profile(e){return e?t.merge({endpoint:this.defaultEndpoint},t.merge({profiles:{}},this.allProfileData).profiles[e]):{}}profiles(){return Object.keys(this.allProfileData.profiles||{})}},Z.REST=Q,Z.utils=X,module.exports=Z;
