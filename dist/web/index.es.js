/**
 * Copyright Metrichor Ltd. (An Oxford Nanopore Technologies Company) 2019
 */

import e from"os";import{merge as r,assign as t,every as o,isFunction as n,filter as s}from"lodash";import a from"axios";import i from"crypto";a.defaults.validateStatus=(e=>e<=504);const c=(e,r)=>{console.warn(`DEPRECATION WARNING: '${e}' will be removed from future versions of this package. Please rename the function to '${r}'`)},l=function(){const e=(e,r)=>{e.headers||(e.headers={});let t=r;if(t||(t={}),!t.apikey)return;if(e.headers["X-EPI2ME-ApiKey"]=t.apikey,!t.apisecret)return;e.headers["X-EPI2ME-SignatureDate"]=(new Date).toISOString(),e.url.match(/^https:/)&&(e.url=e.url.replace(/:443/,"")),e.url.match(/^http:/)&&(e.url=e.url.replace(/:80/,""));const o=[e.url,Object.keys(e.headers).sort().filter(e=>e.match(/^x-epi2me/i)).map(r=>`${r}:${e.headers[r]}`).join("\n")].join("\n"),n=i.createHmac("sha1",t.apisecret).update(o).digest("hex");e.headers["X-EPI2ME-SignatureV0"]=n},t=async e=>{const r=e?e.data:null;if(!r)return Promise.reject(new Error("unexpected non-json response"));if(e&&e.status>=400){let t=`Network error ${e.status}`;return r.error&&(t=r.error),504===e.status&&(t="Please check your network connection and try again."),Promise.reject(new Error(t))}return r.error?Promise.reject(new Error(r.error)):Promise.resolve(r)};return{version:"3.0.0",headers:(t,o)=>{let n=o;n||(n={}),t.headers=r({Accept:"application/json","Content-Type":"application/json","X-EPI2ME-Client":n.user_agent||"api","X-EPI2ME-Version":n.agent_version||l.version},t.headers),"signing"in n&&!n.signing||e(t,n),n.proxy&&(t.proxy=n.proxy)},get:async(e,r)=>{let o,n=r.url,s=e;r.skip_url_mangle?o=s:(s=`/${s}`,o=(n=n.replace(/\/+$/,""))+(s=s.replace(/\/+/g,"/")));const i={url:o,gzip:!0};let c;l.headers(i,r);try{c=await a.get(i.url,i)}catch(u){return Promise.reject(u)}return t(c,r)},post:async(e,o,n)=>{let s=n.url;const i={url:`${s=s.replace(/\/+$/,"")}/${e.replace(/\/+/g,"/")}`,gzip:!0,data:o,headers:{}};if(n.legacy_form){const e=[],t=r({json:JSON.stringify(o)},o);Object.keys(t).sort().forEach(r=>{e.push(`${r}=${escape(t[r])}`)}),i.data=e.join("&"),i.headers["Content-Type"]="application/x-www-form-urlencoded"}l.headers(i,n);const{data:c}=i;let u;delete i.data;try{u=await a.post(i.url,c,i)}catch(w){return Promise.reject(w)}return t(u,n)},put:async(e,o,n,s)=>{let i=s.url;const c={url:`${i=i.replace(/\/+$/,"")}/${e.replace(/\/+/g,"/")}/${o}`,gzip:!0,data:n,headers:{}};if(s.legacy_form){const e=[],t=r({json:JSON.stringify(n)},n);Object.keys(t).sort().forEach(r=>{e.push(`${r}=${escape(t[r])}`)}),c.data=e.join("&"),c.headers["Content-Type"]="application/x-www-form-urlencoded"}l.headers(c,s);const{data:u}=c;let w;delete c.data;try{w=await a.put(c.url,u,c)}catch(m){return Promise.reject(m)}return t(w,s)}}}();var u=!1,w="https://epi2me.nanoporetech.com",m="EPI2ME API",f=!0;export default class{constructor(e){this.options=t({agent_version:l.version,local:u,url:w,user_agent:m,signing:f},e);const{log:r}=this.options;if(r){if(!o([r.info,r.warn,r.error],n))throw new Error('expected log object to have "error", "debug", "info" and "warn" methods');this.log=r}else this.log={info:e=>{console.info(`[${(new Date).toISOString()}] INFO: ${e}`)},debug:e=>{console.debug(`[${(new Date).toISOString()}] DEBUG: ${e}`)},warn:e=>{console.warn(`[${(new Date).toISOString()}] WARN: ${e}`)},error:e=>{console.error(`[${(new Date).toISOString()}] ERROR: ${e}`)}}}async list(e){try{const t=await l.get(e,this.options),o=e.match(/^[a-z_]+/i)[0];return Promise.resolve(t[`${o}s`])}catch(r){return this.log.error(`list error ${String(r)}`),Promise.reject(r)}}async read(e,r){try{const o=await l.get(`${e}/${r}`,this.options);return Promise.resolve(o)}catch(t){return this.log.error("read",t),Promise.reject(t)}}async user(e){let r;if(this.options.local)r={accounts:[{id_user_account:"none",number:"NONE",name:"None"}]};else try{r=await l.get("user",this.options)}catch(t){return e?e(t):Promise.reject(t)}return e?e(null,r):Promise.resolve(r)}async instanceToken(e,r){try{const n=await l.post("token",{id_workflow_instance:e},t({},this.options,{legacy_form:!0}));return r?r(null,n):Promise.resolve(n)}catch(o){return r?r(o):Promise.reject(o)}}async instance_token(e,r){return c("instance_token","instanceToken"),this.instanceToken(e,r)}async installToken(e,r){try{const n=await l.post("token/install",{id_workflow:e},t({},this.options,{legacy_form:!0}));return r?r(null,n):Promise.resolve(n)}catch(o){return r?r(o):Promise.reject(o)}}async install_token(e,r){return c("install_token","installToken"),this.installToken(e,r)}async attributes(e){try{const t=await this.list("attribute");return e?e(null,t):Promise.resolve(t)}catch(r){return e?e(r):Promise.reject(r)}}async workflows(e){try{const t=await this.list("workflow");return e?e(null,t):Promise.resolve(t)}catch(r){return e?e(r):Promise.reject(r)}}async amiImages(e){if(this.options.local){const r=new Error("amiImages unsupported in local mode");return e?e(r):Promise.reject(r)}try{const t=this.list("ami_image");return e?e(null,t):Promise.resolve(t)}catch(r){return e?e(r):Promise.reject(r)}}async ami_images(e){return c("ami_images","amiImages"),this.amiImages(e)}async amiImage(e,r,t){let o,n,s,a;if(e&&r&&t instanceof Function?(o=e,n=r,s=t,a="update"):e&&r instanceof Object&&!(r instanceof Function)?(o=e,n=r,a="update"):e instanceof Object&&r instanceof Function?(n=e,s=r,a="create"):e instanceof Object&&!r?(n=e,a="create"):(a="read",o=e,s=r instanceof Function?r:null),this.options.local){const e=new Error("ami_image unsupported in local mode");return s?s(e):Promise.reject(e)}if("update"===a)try{const e=await l.put("ami_image",o,n,this.options);return s?s(null,e):Promise.resolve(e)}catch(i){return s?s(i):Promise.reject(i)}if("create"===a)try{const e=await l.post("ami_image",n,this.options);return s?s(null,e):Promise.resolve(e)}catch(i){return s?s(i):Promise.reject(i)}if(!o){const e=new Error("no id_ami_image specified");return s?s(e):Promise.reject(e)}try{const e=await this.read("ami_image",o);return s?s(null,e):Promise.resolve(e)}catch(i){return s?s(i):Promise.reject(i)}}async ami_image(e,r,t){return c("ami_image","amiImage"),this.amiImage(e,r,t)}async workflow(e,o,n){let a,i,c,u;if(e&&o&&n instanceof Function?(a=e,i=o,c=n,u="update"):e&&o instanceof Object&&!(o instanceof Function)?(a=e,i=o,u="update"):e instanceof Object&&o instanceof Function?(i=e,c=o,u="create"):e instanceof Object&&!o?(i=e,u="create"):(u="read",a=e,c=o instanceof Function?o:null),"update"===u)try{const e=await l.put("workflow",a,i,t({},this.options,{legacy_form:!0}));return c?c(null,e):Promise.resolve(e)}catch(h){return c?c(h):Promise.reject(h)}if("create"===u)try{const e=await l.post("workflow",i,t({},this.options,{legacy_form:!0}));return c?c(null,e):Promise.resolve(e)}catch(h){return c?c(h):Promise.reject(h)}if(!a){const e=new Error("no workflow id specified");return c?c(e):Promise.reject(e)}const w={};try{const e=await this.read("workflow",a);if(e.error)throw new Error(e.error);r(w,e)}catch(h){return this.log.error(`${a}: error fetching workflow ${String(h)}`),c?c(h):Promise.reject(h)}r(w,{params:{}});try{const e=await l.get(`workflow/config/${a}`,this.options);if(e.error)throw new Error(e.error);r(w,e)}catch(h){return this.log.error(`${a}: error fetching workflow config ${String(h)}`),c?c(h):Promise.reject(h)}const m=s(w.params,{widget:"ajax_dropdown"}),f=[...m.map((e,r)=>{const t=m[r];return new Promise(async(e,r)=>{const o=t.values.source.replace("{{EPI2ME_HOST}}","");try{const n=(await l.get(o,this.options))[t.values.data_root];return n&&(t.values=n.map(e=>({label:e[t.values.items.label_key],value:e[t.values.items.value_key]}))),e()}catch(h){return this.log.error(`failed to fetch ${o}`),r(h)}})})];try{return await Promise.all(f),c?c(null,w):Promise.resolve(w)}catch(h){return this.log.error(`${a}: error fetching config and parameters ${String(h)}`),c?c(h):Promise.reject(h)}}async startWorkflow(e,r){return l.post("workflow_instance",e,t({},this.options,{legacy_form:!0}),r)}async start_workflow(e,r){return c("start_workflow","startWorkflow"),this.startWorkflow(e,r)}stopWorkflow(e,r){return l.put("workflow_instance/stop",e,null,t({},this.options,{legacy_form:!0}),r)}stop_workflow(e,r){return c("stop_workflow","stopWorkflow"),this.stopWorkflow(e,r)}async workflowInstances(e,r){let t,o;if(!e||e instanceof Function||void 0!==r?(t=e,o=r):o=e,o&&o.run_id)try{const e=(await l.get(`workflow_instance/wi?show=all&columns[0][name]=run_id;columns[0][searchable]=true;columns[0][search][regex]=true;columns[0][search][value]=${o.run_id};`,this.options)).data.map(e=>({id_workflow_instance:e.id_ins,id_workflow:e.id_flo,run_id:e.run_id,description:e.desc,rev:e.rev}));return t?t(null,e):Promise.resolve(e)}catch(n){return t?t(n):Promise.reject(n)}try{const e=await this.list("workflow_instance");return t?t(null,e):Promise.resolve(e)}catch(n){return t?t(n):Promise.reject(n)}}async workflow_instances(e,r){return c("workflow_instances","workflowInstances"),this.workflowInstances(e,r)}async workflowInstance(e,r){try{const o=await this.read("workflow_instance",e);return r?r(null,o):Promise.resolve(o)}catch(t){return r?r(t):Promise.reject(t)}}async workflow_instance(e,r){return c("workflow_instance","workflowInstance"),this.workflowInstance(e,r)}workflowConfig(e,r){return l.get(`workflow/config/${e}`,this.options,r)}workflow_config(e,r){return c("workflow_config","workflowConfig"),this.workflowConfig(e,r)}async register(r,o,n){let s,a;o&&o instanceof Function?a=o:(s=o,a=n);try{const o=await l.put("reg",r,{description:s||`${e.userInfo().username}@${e.hostname()}`},t({},this.options,{signing:!1}));return a?a(null,o):Promise.resolve(o)}catch(i){return a?a(i):Promise.reject(i)}}async datasets(e,r){let t,o;!e||e instanceof Function||void 0!==r?(t=e,o=r):o=e,o||(o={}),o.show||(o.show="mine");try{const e=await this.list(`dataset?show=${o.show}`);return t?t(null,e):Promise.resolve(e)}catch(n){return t?t(n):Promise.reject(n)}}async dataset(e,r){if(!this.options.local)try{const o=await this.read("dataset",e);return r?r(null,o):Promise.resolve(o)}catch(t){return r?r(t):Promise.reject(t)}try{const o=(await this.datasets()).find(r=>r.id_dataset===e);return r?r(null,o):Promise.resolve(o)}catch(t){return r?r(t):Promise.reject(t)}}async fetchContent(e,r){const o=t({},this.options,{skip_url_mangle:!0});try{const t=await l.get(e,o);return r?r(null,t):Promise.resolve(t)}catch(n){return r?r(n):Promise.reject(n)}}}
