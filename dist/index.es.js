/**
 * Copyright Metrichor Ltd. (An Oxford Nanopore Technologies Company) 2020
 */

import t from"aws-sdk";import e from"fs-extra";import{merge as s,remove as i,assign as o,countBy as n}from"lodash";import r,{homedir as a,EOL as l}from"os";import c from"path";import h from"sqlite";import u from"axios";import d from"crypto";import{httpsOverHttps as p,httpsOverHttp as f}from"tunnel";import{BehaviorSubject as g,combineLatest as w}from"rxjs";import m from"graphql-tag";import{InMemoryCache as y}from"apollo-cache-inmemory";import b from"apollo-client";import{ApolloLink as k,execute as v}from"apollo-link";import{createHttpLink as S}from"apollo-link-http";import{buildAxiosFetch as $}from"@lifeomic/axios-fetch";import _ from"socket.io-client";import E,{createGunzip as I}from"zlib";import T from"fdir";import x from"proxy-agent";import O from"readline";import{isString as j}from"util";var P="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof window?window:"undefined"!==typeof global?global:"undefined"!==typeof self?self:{};function R(t,e,s){return t(s={path:e,exports:{},require:function(t,e){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}((void 0===e||null===e)&&s.path)}},s.exports),s.exports}var A=R((function(t,e){!function(s){var i=e&&!e.nodeType&&e,o=t&&!t.nodeType&&t,n="object"==typeof P&&P;n.global!==n&&n.window!==n&&n.self!==n||(s=n);var r,a,l=2147483647,c=/^xn--/,h=/[^\x20-\x7E]/,u=/[\x2E\u3002\uFF0E\uFF61]/g,d={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},p=Math.floor,f=String.fromCharCode;function g(t){throw RangeError(d[t])}function w(t,e){for(var s=t.length,i=[];s--;)i[s]=e(t[s]);return i}function m(t,e){var s=t.split("@"),i="";return s.length>1&&(i=s[0]+"@",t=s[1]),i+w((t=t.replace(u,".")).split("."),e).join(".")}function y(t){for(var e,s,i=[],o=0,n=t.length;o<n;)(e=t.charCodeAt(o++))>=55296&&e<=56319&&o<n?56320==(64512&(s=t.charCodeAt(o++)))?i.push(((1023&e)<<10)+(1023&s)+65536):(i.push(e),o--):i.push(e);return i}function b(t){return w(t,(function(t){var e="";return t>65535&&(e+=f((t-=65536)>>>10&1023|55296),t=56320|1023&t),e+=f(t)})).join("")}function k(t,e){return t+22+75*(t<26)-((0!=e)<<5)}function v(t,e,s){var i=0;for(t=s?p(t/700):t>>1,t+=p(t/e);t>455;i+=36)t=p(t/35);return p(i+36*t/(t+38))}function S(t){var e,s,i,o,n,r,a,c,h,u,d,f=[],w=t.length,m=0,y=128,k=72;for((s=t.lastIndexOf("-"))<0&&(s=0),i=0;i<s;++i)t.charCodeAt(i)>=128&&g("not-basic"),f.push(t.charCodeAt(i));for(o=s>0?s+1:0;o<w;){for(n=m,r=1,a=36;o>=w&&g("invalid-input"),((c=(d=t.charCodeAt(o++))-48<10?d-22:d-65<26?d-65:d-97<26?d-97:36)>=36||c>p((l-m)/r))&&g("overflow"),m+=c*r,!(c<(h=a<=k?1:a>=k+26?26:a-k));a+=36)r>p(l/(u=36-h))&&g("overflow"),r*=u;k=v(m-n,e=f.length+1,0==n),p(m/e)>l-y&&g("overflow"),y+=p(m/e),m%=e,f.splice(m++,0,y)}return b(f)}function $(t){var e,s,i,o,n,r,a,c,h,u,d,w,m,b,S,$=[];for(w=(t=y(t)).length,e=128,s=0,n=72,r=0;r<w;++r)(d=t[r])<128&&$.push(f(d));for(i=o=$.length,o&&$.push("-");i<w;){for(a=l,r=0;r<w;++r)(d=t[r])>=e&&d<a&&(a=d);for(a-e>p((l-s)/(m=i+1))&&g("overflow"),s+=(a-e)*m,e=a,r=0;r<w;++r)if((d=t[r])<e&&++s>l&&g("overflow"),d==e){for(c=s,h=36;!(c<(u=h<=n?1:h>=n+26?26:h-n));h+=36)S=c-u,b=36-u,$.push(f(k(u+S%b,0))),c=p(S/b);$.push(f(k(c,0))),n=v(s,m,i==o),s=0,++i}++s,++e}return $.join("")}if(r={version:"1.3.2",ucs2:{decode:y,encode:b},decode:S,encode:$,toASCII:function(t){return m(t,(function(t){return h.test(t)?"xn--"+$(t):t}))},toUnicode:function(t){return m(t,(function(t){return c.test(t)?S(t.slice(4).toLowerCase()):t}))}},i&&o)if(t.exports==i)o.exports=r;else for(a in r)r.hasOwnProperty(a)&&(i[a]=r[a]);else s.punycode=r}(P)}));function C(t,e){return Object.prototype.hasOwnProperty.call(t,e)}var N=function(t,e,s,i){e=e||"&",s=s||"=";var o={};if("string"!==typeof t||0===t.length)return o;var n=/\+/g;t=t.split(e);var r=1e3;i&&"number"===typeof i.maxKeys&&(r=i.maxKeys);var a=t.length;r>0&&a>r&&(a=r);for(var l=0;l<a;++l){var c,h,u,d,p=t[l].replace(n,"%20"),f=p.indexOf(s);f>=0?(c=p.substr(0,f),h=p.substr(f+1)):(c=p,h=""),u=decodeURIComponent(c),d=decodeURIComponent(h),C(o,u)?Array.isArray(o[u])?o[u].push(d):o[u]=[o[u],d]:o[u]=d}return o},F=function(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}},M=function(t,e,s,i){return e=e||"&",s=s||"=",null===t&&(t=void 0),"object"===typeof t?Object.keys(t).map((function(i){var o=encodeURIComponent(F(i))+s;return Array.isArray(t[i])?t[i].map((function(t){return o+encodeURIComponent(F(t))})).join(e):o+encodeURIComponent(F(t[i]))})).join(e):i?encodeURIComponent(F(i))+s+encodeURIComponent(F(t)):""},q=R((function(t,e){e.decode=e.parse=N,e.encode=e.stringify=M})),D=function(t,e){return Y(t,!1,!0).resolve(e)};function W(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var U=/^([a-z0-9.+-]+:)/i,z=/:[0-9]*$/,L=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),Q=["'"].concat(L),H=["%","/","?",";","#"].concat(Q),J=["/","?","#"],G=/^[a-z0-9A-Z_-]{0,63}$/,B=/^([a-z0-9A-Z_-]{0,63})(.*)$/,K={javascript:!0,"javascript:":!0},V={javascript:!0,"javascript:":!0},X={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};function Y(t,e,s){if(t&&tt(t)&&t instanceof W)return t;var i=new W;return i.parse(t,e,s),i}function Z(t){return"string"===typeof t}function tt(t){return"object"===typeof t&&null!==t}function et(t){return null===t}W.prototype.parse=function(t,e,s){if(!Z(t))throw new TypeError("Parameter 'url' must be a string, not "+typeof t);var i=t;i=i.trim();var o=U.exec(i);if(o){var n=(o=o[0]).toLowerCase();this.protocol=n,i=i.substr(o.length)}if(s||o||i.match(/^\/\/[^@\/]+@[^@\/]+/)){var r="//"===i.substr(0,2);!r||o&&V[o]||(i=i.substr(2),this.slashes=!0)}if(!V[o]&&(r||o&&!X[o])){for(var a,l,c=-1,h=0;h<J.length;h++){-1!==(u=i.indexOf(J[h]))&&(-1===c||u<c)&&(c=u)}-1!==(l=-1===c?i.lastIndexOf("@"):i.lastIndexOf("@",c))&&(a=i.slice(0,l),i=i.slice(l+1),this.auth=decodeURIComponent(a)),c=-1;for(h=0;h<H.length;h++){var u;-1!==(u=i.indexOf(H[h]))&&(-1===c||u<c)&&(c=u)}-1===c&&(c=i.length),this.host=i.slice(0,c),i=i.slice(c),this.parseHost(),this.hostname=this.hostname||"";var d="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!d)for(var p=this.hostname.split(/\./),f=(h=0,p.length);h<f;h++){var g=p[h];if(g&&!g.match(G)){for(var w="",m=0,y=g.length;m<y;m++)g.charCodeAt(m)>127?w+="x":w+=g[m];if(!w.match(G)){var b=p.slice(0,h),k=p.slice(h+1),v=g.match(B);v&&(b.push(v[1]),k.unshift(v[2])),k.length&&(i="/"+k.join(".")+i),this.hostname=b.join(".");break}}}if(this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),!d){var S=this.hostname.split("."),$=[];for(h=0;h<S.length;++h){var _=S[h];$.push(_.match(/[^A-Za-z0-9_-]/)?"xn--"+A.encode(_):_)}this.hostname=$.join(".")}var E=this.port?":"+this.port:"",I=this.hostname||"";this.host=I+E,this.href+=this.host,d&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==i[0]&&(i="/"+i))}if(!K[n])for(h=0,f=Q.length;h<f;h++){var T=Q[h],x=encodeURIComponent(T);x===T&&(x=escape(T)),i=i.split(T).join(x)}var O=i.indexOf("#");-1!==O&&(this.hash=i.substr(O),i=i.slice(0,O));var j=i.indexOf("?");if(-1!==j?(this.search=i.substr(j),this.query=i.substr(j+1),e&&(this.query=q.parse(this.query)),i=i.slice(0,j)):e&&(this.search="",this.query={}),i&&(this.pathname=i),X[n]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){E=this.pathname||"",_=this.search||"";this.path=E+_}return this.href=this.format(),this},W.prototype.format=function(){var t=this.auth||"";t&&(t=(t=encodeURIComponent(t)).replace(/%3A/i,":"),t+="@");var e=this.protocol||"",s=this.pathname||"",i=this.hash||"",o=!1,n="";this.host?o=t+this.host:this.hostname&&(o=t+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(o+=":"+this.port)),this.query&&tt(this.query)&&Object.keys(this.query).length&&(n=q.stringify(this.query));var r=this.search||n&&"?"+n||"";return e&&":"!==e.substr(-1)&&(e+=":"),this.slashes||(!e||X[e])&&!1!==o?(o="//"+(o||""),s&&"/"!==s.charAt(0)&&(s="/"+s)):o||(o=""),i&&"#"!==i.charAt(0)&&(i="#"+i),r&&"?"!==r.charAt(0)&&(r="?"+r),e+o+(s=s.replace(/[?#]/g,(function(t){return encodeURIComponent(t)})))+(r=r.replace("#","%23"))+i},W.prototype.resolve=function(t){return this.resolveObject(Y(t,!1,!0)).format()},W.prototype.resolveObject=function(t){if(Z(t)){var e=new W;e.parse(t,!1,!0),t=e}var s=new W;if(Object.keys(this).forEach((function(t){s[t]=this[t]}),this),s.hash=t.hash,""===t.href)return s.href=s.format(),s;if(t.slashes&&!t.protocol)return Object.keys(t).forEach((function(e){"protocol"!==e&&(s[e]=t[e])})),X[s.protocol]&&s.hostname&&!s.pathname&&(s.path=s.pathname="/"),s.href=s.format(),s;if(t.protocol&&t.protocol!==s.protocol){if(!X[t.protocol])return Object.keys(t).forEach((function(e){s[e]=t[e]})),s.href=s.format(),s;if(s.protocol=t.protocol,t.host||V[t.protocol])s.pathname=t.pathname;else{for(var i=(t.pathname||"").split("/");i.length&&!(t.host=i.shift()););t.host||(t.host=""),t.hostname||(t.hostname=""),""!==i[0]&&i.unshift(""),i.length<2&&i.unshift(""),s.pathname=i.join("/")}if(s.search=t.search,s.query=t.query,s.host=t.host||"",s.auth=t.auth,s.hostname=t.hostname||t.host,s.port=t.port,s.pathname||s.search){var o=s.pathname||"",n=s.search||"";s.path=o+n}return s.slashes=s.slashes||t.slashes,s.href=s.format(),s}var r=s.pathname&&"/"===s.pathname.charAt(0),a=t.host||t.pathname&&"/"===t.pathname.charAt(0),l=a||r||s.host&&t.pathname,c=l,h=s.pathname&&s.pathname.split("/")||[],u=(i=t.pathname&&t.pathname.split("/")||[],s.protocol&&!X[s.protocol]);if(u&&(s.hostname="",s.port=null,s.host&&(""===h[0]?h[0]=s.host:h.unshift(s.host)),s.host="",t.protocol&&(t.hostname=null,t.port=null,t.host&&(""===i[0]?i[0]=t.host:i.unshift(t.host)),t.host=null),l=l&&(""===i[0]||""===h[0])),a)s.host=t.host||""===t.host?t.host:s.host,s.hostname=t.hostname||""===t.hostname?t.hostname:s.hostname,s.search=t.search,s.query=t.query,h=i;else if(i.length)h||(h=[]),h.pop(),h=h.concat(i),s.search=t.search,s.query=t.query;else if(null!=t.search){if(u)s.hostname=s.host=h.shift(),(w=!!(s.host&&s.host.indexOf("@")>0)&&s.host.split("@"))&&(s.auth=w.shift(),s.host=s.hostname=w.shift());return s.search=t.search,s.query=t.query,et(s.pathname)&&et(s.search)||(s.path=(s.pathname?s.pathname:"")+(s.search?s.search:"")),s.href=s.format(),s}if(!h.length)return s.pathname=null,s.search?s.path="/"+s.search:s.path=null,s.href=s.format(),s;for(var d=h.slice(-1)[0],p=(s.host||t.host)&&("."===d||".."===d)||""===d,f=0,g=h.length;g>=0;g--)"."==(d=h[g])?h.splice(g,1):".."===d?(h.splice(g,1),f++):f&&(h.splice(g,1),f--);if(!l&&!c)for(;f--;f)h.unshift("..");!l||""===h[0]||h[0]&&"/"===h[0].charAt(0)||h.unshift(""),p&&"/"!==h.join("/").substr(-1)&&h.push("");var w,m=""===h[0]||h[0]&&"/"===h[0].charAt(0);u&&(s.hostname=s.host=m?"":h.length?h.shift():"",(w=!!(s.host&&s.host.indexOf("@")>0)&&s.host.split("@"))&&(s.auth=w.shift(),s.host=s.hostname=w.shift()));return(l=l||s.host&&h.length)&&!m&&h.unshift(""),h.length?s.pathname=h.join("/"):(s.pathname=null,s.path=null),et(s.pathname)&&et(s.search)||(s.path=(s.pathname?s.pathname:"")+(s.search?s.search:"")),s.auth=t.auth||s.auth,s.slashes=s.slashes||t.slashes,s.href=s.format(),s},W.prototype.parseHost=function(){var t=this.host,e=z.exec(t);e&&(":"!==(e=e[0])&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)};var st="3.0.1749";const it=(...t)=>{},ot={debug:it,error:it,info:it,warn:it},nt={info(...t){console.info(`[${(new Date).toISOString()}] INFO:`,...t)},debug(...t){console.debug(`[${(new Date).toISOString()}] DEBUG:`,...t)},warn(...t){console.warn(`[${(new Date).toISOString()}] WARN:`,...t)},error(...t){console.error(`[${(new Date).toISOString()}] ERROR:`,...t)}};function rt(t){return"object"===typeof t&&!1===Array.isArray(t)}function at(t){return"function"===typeof t}function lt(t){return"boolean"===typeof t}function ct(t){return"string"===typeof t}function ht(t){return"number"===typeof t}function ut(t){return"number"===typeof t||"string"===typeof t}function dt(t){return Array.isArray(t)}function pt(t){return"undefined"===typeof t}function ft(t){return null===t||"undefined"===typeof t}function gt(t,e){if(ct(t))return t;if(ft(t)&&"undefined"!==typeof e)return e;throw new Error(`Unable to cast ${typeof t} to String`)}function wt(t,e){if(ht(t))return t;if(ft(t)&&"undefined"!==typeof e)return e;throw new Error(`Unable to cast ${typeof t} to Number`)}function mt(t){if(ct(t))return t;if(ht(t)||lt(t))return t.toString();throw new Error(`Unable to cast ${typeof t} to String`)}function yt(t){if(ht(t))return t;if(ct(t)){const e=parseFloat(t);if(!isNaN(e))return e}if(lt(t))return+t;throw new Error(`Unable to cast ${typeof t} to Number`)}function bt(t,e){if(ut(t))return t;if(ft(t)&&"undefined"!==typeof e)return e;throw new Error(`Unable to cast ${typeof t} to Index`)}function kt(t,e){if(rt(t))return t;if(ft(t)&&"undefined"!==typeof e)return e;throw new Error(`Unable to cast ${typeof t} to Indexable`)}function vt(t,e){if(lt(t))return t;if(ft(t)&&"undefined"!==typeof e)return e;throw new Error(`Unable to cast ${typeof t} to Boolean`)}function St(t,e){if(dt(t))return t;if(ft(t)&&"undefined"!==typeof e)return e;throw new Error(`Unable to cast ${typeof t} to Array`)}function $t(t,e){if(rt(t))return t;if(ft(t)&&"undefined"!==typeof e)return e;throw new Error(`Unable to cast ${typeof t} to Record`)}function _t(t,e){if(at(t))return t;if(ft(t)&&"undefined"!==typeof e)return e;throw new Error(`Unable to cast ${typeof t} to Function`)}function Et(t,e,s){if(ft(t)&&"undefined"!==typeof s)return s;if(dt(t))return t.map(e);throw new Error(`Unable to cast ${typeof t} to Array`)}function It(t){if(!ft(t))return gt(t)}function Tt(t){if(!ft(t))return wt(t)}function xt(t){if(!ft(t))return bt(t)}function Ot(t){if(!ft(t))return vt(t)}function jt(t){if(!ft(t))return $t(t)}function Pt(t){if(!ft(t))return _t(t)}u.defaults.validateStatus=t=>t<=504;const Rt=function(){const t={sign:(t,e)=>{var s,i;if(!e)return;if(t.headers||(t.headers={}),!e.apikey)return;if(t.headers["X-EPI2ME-ApiKey"]=e.apikey,!e.apisecret)return;t.headers["X-EPI2ME-SignatureDate"]=(new Date).toISOString(),(null===(s=t.url)||void 0===s?void 0:s.match(/^https:/))&&(t.url=t.url.replace(/:443/,"")),(null===(i=t.url)||void 0===i?void 0:i.match(/^http:/))&&(t.url=t.url.replace(/:80/,""));const o=[t.url,Object.keys(t.headers).sort().filter(t=>t.match(/^x-epi2me/i)).map(e=>`${e}:${t.headers[e]}`).join("\n")].join("\n"),n=d.createHmac("sha1",e.apisecret).update(o).digest("hex");t.headers["X-EPI2ME-SignatureV0"]=n},responseHandler(t){const e=t&&rt(t.data)?t.data:null;if(t&&t.status>=400){let s=`Network error ${t.status}`;throw(null===e||void 0===e?void 0:e.error)&&(s=e.error+""),504===t.status&&(s="Please check your network connection and try again."),new Error(s)}if(!e)throw new Error("unexpected non-json response");if(e.error)throw new Error(e.error+"");return e}};return{version:"3.0.1749",headers(e,i){var o,n;if(e.headers=s({Accept:"application/json","Content-Type":"application/json","X-EPI2ME-Client":i.user_agent||"api","X-EPI2ME-Version":i.agent_version||Rt.version},e.headers,i.headers),(null===(o=i.signing)||void 0===o||o)&&t.sign(e,i),i.proxy){const t=i.proxy.match(/https?:\/\/((\S+):(\S+)@)?(\S+):(\d+)/);if(!t)throw new Error("Failed to parse Proxy URL");const s=t[2],o=t[3],r={host:t[4],port:parseInt(t[5],10)};s&&o&&(r.proxyAuth=`${s}:${o}`);const a=null!==(n=i.log)&&void 0!==n?n:ot;i.proxy.match(/^https/)?(a.debug("using HTTPS over HTTPS proxy",JSON.stringify(r)),e.httpsAgent=p({proxy:r})):(a.debug("using HTTPS over HTTP proxy",JSON.stringify(r)),e.httpsAgent=f({proxy:r})),e.proxy=!1}},async head(t,e){var s;const i={url:this.mangleURL(t,e)};if(this.headers(i,e),!i.url)throw new Error("unreachable: url argument in HEAD was deleted");(null!==(s=e.log)&&void 0!==s?s:ot).debug("HEAD",i.url);const o=await u.head(i.url,i);if(o&&o.status>=400){if(504===o.status)throw new Error("Please check your network connection and try again.");throw new Error(`Network error ${o.status}`)}return o},async get(e,s){var i;const o={url:this.mangleURL(e,s)};if(this.headers(o,s),!o.url)throw new Error("unreachable: url argument in GET was deleted");(null!==(i=s.log)&&void 0!==i?i:ot).debug("GET",o.url);const n=await u.get(o.url,o);return t.responseHandler(n)},async post(e,s,i){var o;let n=i.url;n=n.replace(/\/+$/,"");const r={url:`${n}/${e.replace(/\/+/g,"/")}`,data:s,headers:{}};i.legacy_form&&this.processLegacyForm(r,s),this.headers(r,i);const{data:a}=r;delete r.data;const l=null!==(o=i.log)&&void 0!==o?o:ot;if(!r.url)throw new Error("unreachable: url argument in POST was deleted");l.debug("POST",r.url);const c=await u.post(r.url,a,r);return i.handler?i.handler(c):t.responseHandler(c)},async put(e,s,i,o){var n;let r=o.url;r=r.replace(/\/+$/,"");const a={url:`${r}/${e.replace(/\/+/g,"/")}/${s}`,data:i,headers:{}};o.legacy_form&&this.processLegacyForm(a,i),this.headers(a,o);const{data:l}=a;delete a.data;const c=null!==(n=o.log)&&void 0!==n?n:ot;if(!a.url)throw new Error("unreachable: url argument in PUT was deleted");c.debug("PUT",a.url);const h=await u.put(a.url,l,a);return t.responseHandler(h)},mangleURL(t,e){let s=e.url;return e.skip_url_mangle?t:(t=`/${t}`,s=s.replace(/\/+$/,""),s+(t=t.replace(/\/+/g,"/")))},processLegacyForm(t,e){const i=[],o=s({json:JSON.stringify(e)},e);Object.keys(o).sort().forEach(t=>{i.push(`${t}=${escape(o[t]+"")}`)}),t.data=i.join("&"),t.headers["Content-Type"]="application/x-www-form-urlencoded"},convertResponseToObject(t){if("object"===typeof t)return t;try{return JSON.parse(t)}catch(e){throw new Error(`exception parsing chain JSON ${String(e)}`)}}}}();let At=0;const Ct=Object.assign(Object.assign({},Rt),{async pipe(t,s,i,o){var n;let r=i.url,a=`/${t}`;r=r.replace(/\/+$/,""),a=a.replace(/\/+/g,"/");const l={url:r+a,headers:{"Accept-Encoding":"gzip",Accept:"application/gzip"}};if(this.headers(l,i),i.proxy){const t=i.proxy.match(/https?:\/\/((\S+):(\S+)@)?(\S+):(\d+)/);if(!t)throw new Error("Failed to parse Proxy URL");const e=t[2],s=t[3],o={host:t[4],port:parseInt(t[5],10)};e&&s&&(o.proxyAuth=`${e}:${s}`);const r=null!==(n=i.log)&&void 0!==n?n:ot;i.proxy.match(/^https/)?(r.debug("using HTTPS over HTTPS proxy",JSON.stringify(o)),l.httpsAgent=p({proxy:o})):(r.debug("using HTTPS over HTTP proxy",JSON.stringify(o)),l.httpsAgent=f({proxy:o})),l.proxy=!1}if(o&&(l.onUploadProgress=o),l.responseType="stream",!l.url)throw new Error("unreachable: url argument in PIPE was deleted");const c=await u.get(l.url,l);return new Promise((t,i)=>{const o=e.createWriteStream(s);c.data.pipe(o),o.on("finish",()=>{t(s)}),o.on("error",t=>{i(new Error(`writer failed ${String(t)}`))})})},getFileID:()=>(At+=1,`FILE_${At}`),async lsRecursive(t,s,i){let o=t;const n=e.statSync(s);if(i){if(await i(s,n))return[]}if(n.isDirectory()){const t=await e.readdir(s),n=[];for(const e of t){const t=c.join(s,e);for(const e of await this.lsRecursive(o,t,i))n.push(e)}return n}return n.isFile()&&o===s&&(o=c.dirname(s)),[{name:c.parse(s).base,path:s,relative:s.replace(o,""),size:n.size,id:this.getFileID()}]},async loadInputFiles({inputFolders:t,outputFolder:e,filetype:s},i,o){let n;n=Array.isArray(s)?s:[s],n=n.map(t=>t&&0!==t.indexOf(".")?`.${t}`:t);const r=async(t,s)=>{const i=c.basename(t),r=[new Promise((e,s)=>"downloads"===i||"skip"===i||"fail"===i||"fastq_fail"===i||"tmp"===i?s(new Error(`${t} failed basic filename`)):e("basic ok")),new Promise((o,r)=>{const a=n.length?new RegExp(`(?:${n.join("|")})$`):null;return t.split(c.sep).filter(t=>t.match(/^[.]/)).length||e&&i===c.basename(e)||a&&!t.match(a)&&s.isFile()?r(new Error(`${t} failed extended filename`)):o("extended ok")}),o?new Promise((e,s)=>{o(t).then(i=>i?s(new Error(`${t} failed extraFilter`)):e("extra ok"))}):Promise.resolve("extra skip")];try{return await Promise.all(r),!1}catch(a){return!0}},a=[];for(const l of t){const t=await this.lsRecursive(l,l,r);a.push(...t.filter(t=>!!t))}return a},stripFile:t=>[c.dirname(t),c.basename(t)]});class Nt{constructor(t,i,o){const n=s({},i);this.options=n,this.log=o;const{idWorkflowInstance:r,inputFolders:a}=n;o.debug(`setting up ${t}/db.sqlite for ${r}`),this.db=e.mkdirp(t).then(()=>(this.log.debug(`opening ${t}/db.sqlite`),h.open(c.join(t,"db.sqlite")).then(async e=>{this.log.debug(`opened ${t}/db.sqlite`),await e.migrate({migrationsPath:c.join(__dirname,"migrations")});const s=a.map(()=>"(?)").join(",");try{return await Promise.all([e.run("INSERT INTO meta (version, idWorkflowInstance) VALUES(?, ?)",st,r),e.run(`INSERT INTO folders (folder_path) VALUES ${s}`,a)]),e}catch(i){return this.log.error(i),Promise.reject(i)}}))).catch(t=>{throw this.log.error(t),t})}async uploadFile(t){const e=await this.db,[s,i]=Ct.stripFile(t);return await e.run("INSERT OR IGNORE INTO folders (folder_path) VALUES (?)",s),e.run("INSERT INTO uploads(filename, path_id) VALUES(?, (SELECT folder_id FROM folders WHERE folder_path = ?))",i,s)}async skipFile(t){const e=await this.db,[s,i]=Ct.stripFile(t);return await e.run("INSERT OR IGNORE INTO folders (folder_path) VALUES (?)",s),e.run("INSERT INTO skips(filename, path_id) VALUES(?, (SELECT folder_id FROM folders WHERE folder_path = ?))",i,s)}async splitFile(t,e){const s=await this.db,[i,o]=Ct.stripFile(t),n=Ct.stripFile(e)[1];return await s.run("INSERT OR IGNORE INTO folders (folder_path) VALUES (?)",i),s.run("INSERT INTO splits(filename, parent, child_path_id, start, end) VALUES(?, ?, (SELECT folder_id FROM folders WHERE folder_path = ?), CURRENT_TIMESTAMP, NULL)",o,n,i)}async splitDone(t){const e=await this.db,[s,i]=Ct.stripFile(t);return e.run("UPDATE splits SET end=CURRENT_TIMESTAMP WHERE filename=? AND child_path_id=(SELECT folder_id FROM folders WHERE folder_path=?)",i,s)}async splitClean(){const t=await this.db,s=await t.all("SELECT splits.filename, folders.folder_path FROM splits INNER JOIN folders ON folders.folder_id = splits.child_path_id WHERE end IS NULL");if(!s)return void this.log.info("no split files to clean");this.log.info(`cleaning ${s.length} split files`),this.log.debug(`going to clean: ${s.map(t=>t.filename).join(" ")}`);const i=s.map(t=>e.unlink(c.join(t.folder_path,t.filename)).catch(()=>{console.warn(`Failed to cleanup ${c.join(t.folder_path,t.filename)}`)}));await Promise.all(i)}async seenUpload(t){const e=await this.db,[s,o]=Ct.stripFile(t);return Promise.all([e.get("SELECT * FROM uploads u INNER JOIN folders ON folders.folder_id = u.path_id WHERE u.filename=? AND folders.folder_path=? LIMIT 1",[o,s]),e.get("SELECT * FROM skips s INNER JOIN folders ON folders.folder_id = s.path_id WHERE s.filename=? AND folders.folder_path=? LIMIT 1",o,s)]).then(t=>i(t,void 0).length)}}var Ft=!1,Mt="https://epi2me.nanoporetech.com",qt="EPI2ME API",Dt="eu-west-1",Wt=5,Ut=1200,zt=1200,Lt=5,Qt=3,Ht=60,Jt=600,Gt=20,Bt=30,Kt=3,Vt="data+telemetry",Xt=[".fastq",".fq",".fastq.gz",".fq.gz"],Yt=!0,Zt="/data";const te="\npage\npages\nhasNext\nhasPrevious\ntotalCount\n",ee="\nidWorkflowInstance\nstartDate\nworkflowImage{\n  workflow\n  {\n    rev\n    name\n  }\n}\n",se=(()=>{const t=(t,e={})=>{if(t.headers||(t.headers={}),!e.apikey||!e.apisecret)return;t.headers["X-EPI2ME-APIKEY"]=e.apikey,t.headers["X-EPI2ME-SIGNATUREDATE"]=(new Date).toISOString();const s=[Object.keys(t.headers).sort().filter(t=>t.match(/^x-epi2me/i)).map(e=>`${e}:${t.headers[e]}`).join("\n"),t.body].join("\n"),i=d.createHmac("sha1",e.apisecret).update(s).digest("hex");t.headers["X-EPI2ME-SIGNATUREV0"]=i};return{version:"3.0.1749",setHeaders:(e,i={})=>{var o,n;if(e.headers=s({Accept:"application/json","Content-Type":"application/json","X-EPI2ME-CLIENT":i.user_agent||"api","X-EPI2ME-VERSION":i.agent_version||se.version},e.headers,i.headers),(null===(o=i.signing)||void 0===o||o)&&t(e,i),i.proxy){const t=i.proxy.match(/https?:\/\/((\S+):(\S+)@)?(\S+):(\d+)/);if(!t)throw new Error("Failed to parse Proxy URL");const s=t[2],o=t[3],r={host:t[4],port:+t[5]};s&&o&&(r.proxyAuth=`${s}:${o}`);const a=null!==(n=i.log)&&void 0!==n?n:ot;i.proxy.match(/^https/)?(a.debug("using HTTPS over HTTPS proxy",JSON.stringify(r)),e.httpsAgent=p({proxy:r})):(a.debug("using HTTPS over HTTP proxy",JSON.stringify(r)),e.httpsAgent=f({proxy:r})),e.proxy=!1}}}})(),ie=$(u),oe=new Set(["get","delete","head","options","post","put","patch","link","unlink"]);function ne({apikey:t,apisecret:e}){return(s,i={})=>{let o;if(i.method&&(n=i.method,!oe.has(n.toLowerCase())))throw new Error(`Invalid method ${i.method}`);var n;return o=i,se.setHeaders(o,{apikey:t,apisecret:e,signing:!0}),ie(s,i)}}const re=new b({link:new k(t=>{const{apikey:e,apisecret:s,url:i}=t.getContext(),o=ne({apikey:e,apisecret:s}),n=S({uri:D(i,"/graphql"),fetch:o,headers:{keys:{apikey:e,apisecret:s}}});return v(n,t)}),cache:new y});class ae{constructor(t){this.client=re,this.createContext=t=>{const{apikey:e,apisecret:s,url:i}=this.options;return Object.assign({apikey:e,apisecret:s,url:i},t)},this.resetCache=()=>{this.client.resetStore()},this.workflows=this.query(m`
    query allWorkflows($page: Int, $pageSize: Int, $isActive: Int, $orderBy: String, $region: String) {
      allWorkflows(page: $page, pageSize: $pageSize, isActive: $isActive, orderBy: $orderBy, region: $region) {
        ${te}
        results {
          ${"\nidWorkflow\nname\ndescription\nsummary\nrev\n"}
        }
      }
    }
  `),this.workflowPages=async t=>{let e=t,s=await this.workflows({variables:{page:e}});const i=async t=>(e=t,s=await this.workflows({variables:{page:e}}),s);return{data:s,next:()=>i(e+1),previous:()=>i(e-1),first:()=>i(1),last:()=>i(0)}},this.workflow=this.query(m`
    query workflow($idWorkflow: ID!) {
      workflow(idWorkflow: $idWorkflow) {
        ${"\nidWorkflow\nname\ndescription\nsummary\nrev\n"}
      }
    }
   `),this.workflowInstances=this.query(m`
  query allWorkflowInstances($page: Int, $pageSize: Int, $shared: Boolean, $idUser: ID, $orderBy: String) {
    allWorkflowInstances(page: $page, pageSize: $pageSize, shared: $shared, idUser: $idUser, orderBy: $orderBy) {
      ${te}
      results {
        ${ee}
      }
    }
  }
   `),this.workflowInstance=this.query(m`
      query workflowInstance($idWorkflowInstance: ID!) {
        workflowInstance(idWorkflowInstance: $idWorkflowInstance) {
          ${ee}
        }
      }
   `),this.startWorkflow=this.mutate(m`
    mutation startWorkflow(
      $idWorkflow: ID!
      $computeAccountId: ID!
      $storageAccountId: ID
      $isConsentedHuman: Boolean = false
      $idDataset: ID
      $storeResults: Boolean = false
      $userDefined: GenericScalar
      $instanceAttributes: [GenericScalar]
      $region: String
    ) {
      startData: startWorkflowInstance(
        idWorkflow: $idWorkflow
        computeAccountId: $computeAccountId
        storageAccountId: $storageAccountId
        isConsentedHuman: $isConsentedHuman
        idDataset: $idDataset
        storeResults: $storeResults
        userDefined: $userDefined
        instanceAttributes: $instanceAttributes
        region: $region
      ) {
        bucket
        idUser
        remoteAddr
        instance {
          idWorkflowInstance
          chain
          keyId
          outputqueue
          mappedTelemetry
          workflowImage {
            inputqueue
            workflow {
              idWorkflow
            }
            region {
              name
            }
          }
        }
      }
    }
  `),this.stopWorkflow=this.mutate(m`
    mutation stopWorkflowInstance($idWorkflowInstance: ID!) {
      stopData: stopWorkflowInstance(idWorkflowInstance: $idWorkflowInstance) {
        success
        message
      }
    }
  `),this.instanceToken=this.mutate(m`
    mutation getInstanceToken($idWorkflowInstance: ID!) {
      token: getInstanceToken(idWorkflowInstance: $idWorkflowInstance) {
        id_workflow_instance: idWorkflowInstance
        accessKeyId
        secretAccessKey
        sessionToken
        expiration
        region
      }
    }
  `),this.user=this.query(m`
    query user {
      me {
        username
        realname
        useraccountSet {
          idUserAccount
        }
      }
    }
  `),this.updateUser=this.mutate(m`
    mutation updateUser($idRegionPreferred: ID!) {
      updateUser(idRegionPreferred: $idRegionPreferred) {
        idRegionPreferred
      }
    }
  `),this.register=this.mutate(m`
    mutation registerToken($code: String!, $description: String) {
      registerToken(code: $code, description: $description) {
        apikey
        apisecret
        description
      }
    }
  `),this.status=this.query(m`
    query status {
      status {
        portalVersion
        remoteAddr
        serverTime
        minimumAgent
        dbVersion
      }
    }
  `),this.regions=this.query(m`
    query regions {
      regions {
        idRegion
        description
        name
      }
    }
  `);let e=t.url;e=e.replace(/:\/\//,"://graphql."),e=e.replace(/\/$/,"");const{apikey:s,apisecret:i,log:o,local:n,signing:r}=t;this.options={url:e,agent_version:t.agent_version,local:n,user_agent:t.user_agent,signing:r,apikey:s,apisecret:i},this.log=o}query(t){return e=>{var s,i,o;const n=null!==(s=null===e||void 0===e?void 0:e.context)&&void 0!==s?s:{},r=null!==(i=null===e||void 0===e?void 0:e.variables)&&void 0!==i?i:{},a=null!==(o=null===e||void 0===e?void 0:e.options)&&void 0!==o?o:{},l=this.createContext(n);let c;return c="string"===typeof t?m`
          ${t}
        `:"function"===typeof t?m`
          ${t(te)}
        `:t,this.client.query(Object.assign(Object.assign({query:c,variables:r},a),{context:l}))}}mutate(t){return e=>{var s,i,o;const n=null!==(s=null===e||void 0===e?void 0:e.context)&&void 0!==s?s:{},r=null!==(i=null===e||void 0===e?void 0:e.variables)&&void 0!==i?i:{},a=null!==(o=null===e||void 0===e?void 0:e.options)&&void 0!==o?o:{},l=this.createContext(n);let c;return c="string"===typeof t?m`
          ${t}
        `:t,this.client.mutate(Object.assign(Object.assign({mutation:c,variables:r},a),{context:l}))}}async healthCheck(){return{status:vt((await Rt.get("/status",Object.assign(Object.assign({},this.options),{log:{debug:it}}))).status)}}}ae.NETWORK_ONLY="network-only",ae.CACHE_FIRST="cache-first",ae.CACHE_AND_NETWORK="cache-and-network",ae.CACHE_ONLY="cache-only",ae.NO_CACHE="no-cache";const le=(t,e)=>{const s=["","K","M","G","T","P","E","Z"];let i=e||0,o=t||0;return o>=1e3?(o/=1e3,i+=1,i>=s.length?"???":le(o,i)):0===i?`${o}${s[i]}`:`${o.toFixed(1)}${s[i]}`};class ce{constructor(t){this.allProfileData={},this.defaultEndpoint=process.env.METRICHOR||Mt,t&&(this.allProfileData=s({profiles:{}},t)),this.allProfileData.endpoint&&(this.defaultEndpoint=this.allProfileData.endpoint)}profile(t){return t?s({endpoint:this.defaultEndpoint},s({profiles:{}},this.allProfileData).profiles[t]):{}}profiles(){return Object.keys(this.allProfileData.profiles||{})}}class he{constructor(t){this.cachedResponses=new Map,this.options=t,this.log=this.options.log}async list(t){const e=t.match(/^[a-z_]+/i);if(!e)throw new Error("Failed to parse entity identifier");return St((await Rt.get(t,this.options))[`${e[0]}s`])}read(t,e){return Rt.get(`${t}/${e}`,this.options)}async user(){return this.options.local?{accounts:[{id_user_account:"none",number:"NONE",name:"None"}]}:Rt.get("user",this.options)}async status(){return Rt.get("status",this.options)}async jwt(){return gt(await Rt.post("authenticate",{},Object.assign(Object.assign({},this.options),{handler:async t=>{if(t.headers["x-epi2me-jwt"])return t.headers["x-epi2me-jwt"];throw new Error("failed to fetch JWT")}})))}async instanceToken(t,e){return Rt.post("token",s(e,{id_workflow_instance:t}),o({},this.options,{legacy_form:!0}))}async installToken(t){return Rt.post("token/install",{id_workflow:t},o({},this.options,{legacy_form:!0}))}attributes(){return this.list("attribute")}async workflows(t){const e=this.list("workflow");if(t)try{t(null,await e)}catch(s){t(s,null)}return e}amiImages(){if(this.options.local)throw new Error("amiImages unsupported in local mode");return this.list("ami_image")}amiImage(t,e){if(this.options.local)throw new Error("ami_image unsupported in local mode");return e instanceof Object?this.updateAmiImage(gt(t),$t(e)):t instanceof Object?Rt.post("ami_image",$t(t),this.options):this.read("ami_image",gt(t))}updateAmiImage(t,e){return Rt.put("ami_image",t,e,this.options)}createAmiImage(t){return Rt.post("ami_image",t,this.options)}readAmiImage(t){return this.read("ami_image",t)}async workflow(t,e,i){if(t&&e&&i instanceof Function)return this.updateWorkflow(gt(t),$t(e),i);if(t&&e instanceof Object&&!(e instanceof Function))return this.updateWorkflow(gt(t),$t(e));if(t instanceof Object&&e instanceof Function)return this.createWorkflow($t(t),e);if(t instanceof Object&&!e)return this.createWorkflow($t(t));const o=It(t),n=Pt(e);if(!o){const t=new Error("no workflow id specified");return n?n(t):Promise.reject(t)}const r={};try{const t=await this.read("workflow",o);if(t.error)throw new Error(t.error+"");s(r,t)}catch(c){return this.log.error(`${o}: error fetching workflow ${String(c)}`),n?n(c):Promise.reject(c)}s(r,{params:{}});try{const t=await Rt.get(`workflow/config/${o}`,this.options);if(t.error)throw new Error(t.error+"");s(r,t)}catch(c){return this.log.error(`${o}: error fetching workflow config ${String(c)}`),n?n(c):Promise.reject(c)}const a=dt(r.params)?St(r.params):$t(r.params),l=[...Object.values(a).map(t=>$t(t)).filter(t=>"ajax_dropdown"===t.widget).map(t=>new Promise((e,s)=>{if(pt(t))throw new Error("parameter is undefined");const i=$t(t.values),o=$t(i.items),n=gt(i.source).replace("{{EPI2ME_HOST}}","").replace(/&?apikey=\{\{EPI2ME_API_KEY\}\}/,"");Rt.get(n,this.options).then(s=>{const n=xt(i.data_root),r=function(t,e){if(!ft(t))return Et(t,e)}(pt(n)?n:s[n],kt);return r&&(t.values=r.map(t=>({label:t[bt(o.label_key)],value:t[bt(o.value_key)]}))),e()}).catch(t=>(this.log.error(`failed to fetch ${n}`),s(t)))}))];try{return await Promise.all(l),n?n(null,r):r}catch(c){return this.log.error(`${o}: error fetching config and parameters ${String(c)}`),n?n(c):Promise.reject(c)}}async updateWorkflow(t,e,s){const i=Rt.put("workflow",t,e,this.options);if(s)try{s(null,await i)}catch(o){s(o)}return i}async createWorkflow(t,e){const s=Rt.post("workflow",t,this.options);if(e)try{e(null,await s)}catch(i){n(i)}return s}async startWorkflow(t){return Rt.post("workflow_instance",t,Object.assign(Object.assign({},this.options),{legacy_form:!0}))}async stopWorkflow(t){return Rt.put("workflow_instance/stop",t.toString(),{},Object.assign(Object.assign({},this.options),{legacy_form:!0}))}async workflowInstances(t){if(!t||!t.run_id)return this.list("workflow_instance");return Et((await Rt.get(`workflow_instance/wi?show=all&columns[0][name]=run_id;columns[0][searchable]=true;columns[0][search][regex]=true;columns[0][search][value]=${t.run_id};`,this.options)).data,$t).map(t=>({id_workflow_instance:t.id_ins,id_workflow:t.id_flo,run_id:t.run_id,description:t.desc,rev:t.rev}))}async workflowInstance(t){return this.read("workflow_instance",t+"")}async workflowConfig(t){return Rt.get(`workflow/config/${t}`,this.options)}async register(t,e){return Rt.put("reg",t,{description:e||`${r.userInfo().username}@${r.hostname()}`},o({},this.options,{signing:!1}))}async datasets(t={}){if(at(t))throw new Error("Unexpected callback instead of query");return t.show||(t.show="mine"),Et(await this.list(`dataset?show=${t.show}`),$t)}async dataset(t){if(!this.options.local)return this.read("dataset",t);return Et(await this.datasets(),$t).find(e=>e.id_dataset===t)}async fetchContent(t){const e=Object.assign(Object.assign({},this.options),{skip_url_mangle:!0,headers:{"Content-Type":""}});let s;try{s=(await Rt.head(t,e)).headers.etag;const i=this.cachedResponses.get(t);if(s&&i&&i.etag===s)return i.response}catch(o){this.log.warn(`Failed to HEAD request ${t}: ${String(o)}`)}const i=await Rt.get(t,e);return s&&this.cachedResponses.set(t,{etag:s,response:i}),i}}class ue{constructor(t,e){var s;this.debounces=new Set,this.debounceWindow=null!==(s=e.debounceWindow)&&void 0!==s?s:2e3,this.log=e.log,this.initialise(t,e.url)}async initialise(t,e){try{const s=await t.jwt();this.socket=_(e,{transportOptions:{polling:{extraHeaders:{Cookie:`x-epi2me-jwt=${s}`}}}}),this.socket.on("connect",()=>{this.log.debug("socket ready")})}catch(s){this.log.error("socket connection failed - JWT authentication error")}}debounce(t,e){const i=s(t)._uuid;if(i){if(this.debounces.has(i))return;this.debounces.add(i),setTimeout(()=>{this.debounces.delete(i)},this.debounceWindow)}e&&e(t)}watch(t,e){if(!this.socket)return this.log.debug(`socket not ready. requeueing watch on ${t}`),void setTimeout(()=>{this.watch(t,e)},1e3);this.socket.on(t,t=>this.debounce(t,e))}emit(t,e){if(!this.socket)return this.log.debug(`socket not ready. requeueing emit on ${t}`),void setTimeout(()=>{this.emit(t,e)},1e3);this.log.debug(`socket emit ${t} ${JSON.stringify(e)}`),this.socket.emit(t,e)}}function de(t,e){const s=setInterval(e,t);return()=>clearInterval(s)}function pe(t,e){const s=setTimeout(e,t);return()=>clearTimeout(s)}class fe{constructor(t={}){let e;if(this.stopped=!0,this.uploadState$=new g(!1),this.analyseState$=new g(!1),this.reportState$=new g(!1),this.runningStates$=w(this.uploadState$,this.analyseState$,this.reportState$),this.instanceTelemetry$=new g(null),this.experimentalWorkerStatus$=new g(null),this.states={download:{progress:{bytes:0,total:0,niceSize:0},success:{files:0,bytes:0,reads:0,niceReads:0,niceSize:0},types:{},fail:0,niceTypes:""},upload:{progress:{bytes:0,total:0,niceSize:0},success:{files:0,bytes:0,reads:0,niceReads:0,niceSize:0},types:{},filesCount:0,niceTypes:""},warnings:[]},this.timers={transferTimeouts:{},visibilityIntervals:{}},this.liveStates$=new g(this.states),"string"===typeof t){const s=$t(JSON.parse(t));e=fe.parseOptObject(s)}else e=fe.parseOptObject(t);this.config={options:e,instance:{id_workflow_instance:e.id_workflow_instance,discoverQueueCache:{},awssettings:{region:e.region}}},this.log=e.log,this.REST=new he(e),this.graphQL=new ae(e)}static parseOptObject(t){const e=gt(t.url,Mt),s={agent_version:gt(t.agent_version,Rt.version),log:this.resolveLogger(t.log),local:vt(t.local,Ft),url:gt(t.endpoint,e),region:gt(t.region,Dt),user_agent:gt(t.user_agent,qt),sessionGrace:wt(t.sessionGrace,Wt),uploadTimeout:wt(t.uploadTimeout,Ut),downloadTimeout:wt(t.downloadTimeout,zt),fileCheckInterval:wt(t.fileCheckInterval,Lt),downloadCheckInterval:wt(t.downloadCheckInterval,Qt),stateCheckInterval:wt(t.stateCheckInterval,Ht),inFlightDelay:wt(t.inFlightDelay,Jt),waitTimeSeconds:wt(t.waitTimeSeconds,Gt),waitTokenError:wt(t.waitTokenError,Bt),transferPoolSize:wt(t.transferPoolSize,Kt),downloadMode:gt(t.downloadMode,Vt),filetype:Et(t.filetype,gt,Xt),signing:vt(t.signing,Yt),sampleDirectory:gt(t.sampleDirectory,Zt),useGraphQL:Ot(t.useGraphQL),apikey:It(t.apikey),apisecret:It(t.apisecret),id_workflow_instance:xt(t.id_workflow_instance),debounceWindow:Tt(t.debounceWindow),proxy:It(t.proxy),inputFolders:Et(t.inputFolders,gt,[]),outputFolder:It(t.outputFolder),awsAcceleration:It(t.awsAcceleration),agent_address:It(t.agent_address),telemetryCb:Pt(t.telemetryCb),dataCb:Pt(t.dataCb),remoteShutdownCb:Pt(t.remoteShutdownCb)};return t.inputFolder&&s.inputFolders.push(gt(t.inputFolder)),s}static resolveLogger(t){if(!rt(t))return nt;try{return{info:_t(t.info),debug:_t(t.debug),warn:_t(t.warn),error:_t(t.error)}}catch(e){throw new Error("expected log object to have error, debug, info and warn methods")}}async socket(){if(this.mySocket)return this.mySocket;this.mySocket=new ue(this.REST,this.config.options);const{id_workflow_instance:t}=this.config.instance;return t&&this.mySocket.watch(`workflow_instance:state:${t}`,t=>{var e,s;const{instance:i}=this.config,o=jt(null===(e=i.chain)||void 0===e?void 0:e.components);if(o){const e=$t(i.summaryTelemetry),n=Object.entries(o).sort((t,e)=>parseInt(t[0],10)-parseInt(e[0],10)),r=kt(t),a=[];for(const[t,i]of n)if(t in r){const o=+t;let n="ROOT";if(0!==o){const t=bt($t(i).wid);n=null!==(s=Object.keys($t(e[t]))[0])&&void 0!==s?s:"ROOT"}const[l,c,h]=gt(r[t]).split(",").map(t=>Math.max(0,+t));a.push({running:l,complete:c,error:h,step:o,name:n})}this.experimentalWorkerStatus$.next(a)}}),this.mySocket}async realtimeFeedback(t,e){(await this.socket()).emit(t,e)}setTimer(t,e,s){if(this.timers[t])throw new Error(`An interval with the name ${t} has already been created`);this.timers[t]=de(e,s)}stopTimer(t){const e=this.timers[t];e&&(this.log.debug(`clearing ${t} interval`),e(),delete this.timers[t])}stopTimeout(t,e){const s=this.timers[t][e];s&&(s(),delete this.timers[t][e])}async stopAnalysis(){this.stopUpload(),this.stopped=!0;const{id_workflow_instance:t}=this.config.instance;if(t){try{this.config.options.useGraphQL?await this.graphQL.stopWorkflow({variables:{idWorkflowInstance:t}}):await this.REST.stopWorkflow(t),this.analyseState$.next(!1)}catch(e){throw this.log.error(`Error stopping instance: ${String(e)}`),e}this.log.info(`workflow instance ${t} stopped`)}}stopUpload(){this.log.debug("stopping watchers"),this.stopTimer("stateCheckInterval"),this.stopTimer("fileCheckInterval"),this.uploadState$.next(!1)}async stopEverything(){this.stopAnalysis();for(const t in this.timers.transferTimeouts){this.log.debug(`clearing transferTimeout for ${t}`);const e=this.timers.transferTimeouts[t];e&&e(),delete this.timers.transferTimeouts[t]}for(const t in this.timers.visibilityIntervals){this.log.debug(`clearing visibilityInterval for ${t}`);const e=this.timers.visibilityIntervals[t];e&&e(),delete this.timers.visibilityIntervals[t]}this.downloadWorkerPool&&(this.log.debug("clearing downloadWorkerPool"),await Promise.all(Object.values(this.downloadWorkerPool)),delete this.downloadWorkerPool),this.stopTimer("summaryTelemetryInterval"),this.stopTimer("downloadCheckInterval")}reportProgress(){const{upload:t,download:e}=this.states;this.log.debug({progress:{download:e,upload:t}})}uploadState(t,e,s){var i,o;const n=null!==(i=this.states.upload)&&void 0!==i?i:{progress:{bytes:0,total:0,niceSize:0},success:{files:0,bytes:0,reads:0,niceReads:0,niceSize:0},types:{},filesCount:0,niceTypes:""};"success"===t?this.updateSuccessState(n.success,e,s):"types"===t?this.updateTypesState(n.types,e,s):this.updateProgressState(n.progress,e,s);try{n.success.niceReads=le(this.states.upload.success.reads)}catch(a){n.success.niceReads=0}try{n.progress.niceSize=le(null!==(o=n.success.bytes+n.progress.bytes)&&void 0!==o?o:0)}catch(a){n.progress.niceSize=0}try{n.success.niceSize=le(this.states.upload.success.bytes)}catch(a){n.success.niceSize=0}n.niceTypes=Object.keys(this.states.upload.types||{}).sort().map(t=>`${this.states.upload.types[t]} ${t}`).join(", ");const r=Date.now();(!this.stateReportTime||r-this.stateReportTime>2e3)&&(this.stateReportTime=r,this.reportProgress()),this.liveStates$.next(Object.assign({},this.states))}downloadState(t,e,s){var i,o;const n=null!==(i=this.states.download)&&void 0!==i?i:{progress:{bytes:0,total:0,niceSize:0},success:{files:0,bytes:0,reads:0,niceReads:0,niceSize:0},types:{},fail:0,niceTypes:""};"success"===t?this.updateSuccessState(n.success,e,s):"types"===t?this.updateTypesState(n.types,e,s):this.updateProgressState(n.progress,e,s);try{n.success.niceReads=le(this.states.upload.success.reads)}catch(a){n.success.niceReads=0}try{n.progress.niceSize=le(null!==(o=n.success.bytes+n.progress.bytes)&&void 0!==o?o:0)}catch(a){n.progress.niceSize=0}try{n.success.niceSize=le(this.states.upload.success.bytes)}catch(a){n.success.niceSize=0}n.niceTypes=Object.keys(this.states.upload.types||{}).sort().map(t=>`${this.states.upload.types[t]} ${t}`).join(", ");const r=Date.now();(!this.stateReportTime||r-this.stateReportTime>2e3)&&(this.stateReportTime=r,this.reportProgress()),this.liveStates$.next(Object.assign({},this.states))}updateSuccessState(t,e,s){var i;const o=new Set(["files","bytes","reads"]);for(const n of Object.keys(s)){const r=("incr"===e?1:-1)*(null!==(i=s[n])&&void 0!==i?i:0);if(o.has(n)){const e=n;t[e]=t[e]+r}}}updateTypesState(t,e,s){var i;for(const o of Object.keys(s)){const n=("incr"===e?1:-1)*(null!==(i=s[o])&&void 0!==i?i:0);t[o]=wt(t[o],0)+n}}updateProgressState(t,e,s){var i;const o=new Set(["bytes","total"]);for(const n of Object.keys(s)){const r=("incr"===e?1:-1)*(null!==(i=s[n])&&void 0!==i?i:0);if(o.has(n)){const e=n;t[e]=t[e]+r}}}url(){return this.config.options.url}apikey(){return this.config.options.apikey}attr(t,e){if(!e)return this.config.options[t];switch(t){case"url":case"region":case"user_agent":case"downloadMode":case"sampleDirectory":case"apikey":case"apisecret":this.config.options[t]=gt(e);break;case"id_workflow_instance":case"sessionGrace":case"uploadTimeout":case"fileCheckInterval":case"downloadCheckInterval":case"stateCheckInterval":case"inFlightDelay":case"waitTimeSeconds":case"waitTokenError":case"transferPoolSize":case"debounceWindow":this.config.options[t]=wt(e);break;case"signing":case"useGraphQL":case"local":this.config.options[t]=vt(e);break;case"filetype":this.config.options[t]=Et(e,gt);break;default:throw new Error('Cannot modify the "log" attribute')}return this}stats(t){return this.states[t]}}function ge(t,e,s){s instanceof Error?t.error(e,s.stack):t.error(e,s)}fe.version=Rt.version,fe.Profile=ce,fe.REST=he,fe.utils=Rt;class we{constructor(t,e={}){this.runningInstances=new Map,this.EPI2ME=t,this.options=e,this.primary=this.instantiate()}get utils(){return this.EPI2ME.utils}get version(){return this.EPI2ME.version}get log(){return this.primary.log}get REST(){return this.primary.REST}get graphQL(){return this.primary.graphQL}get SampleReader(){return this.primary.SampleReader}reset(t={}){this.options=t,this.runningInstances.clear(),this.primary=this.instantiate()}getRunningInstance(t){return this.runningInstances.get(t)}getAllRunningInstances(){return Array.from(this.runningInstances.values())}instantiate(t={}){return new this.EPI2ME(Object.assign(Object.assign({},this.options),t))}async startRun(t,e){const s=this.instantiate(t);try{const t=bt((await s.autoStart(e)).id_workflow_instance);this.runningInstances.set(t,s)}catch(i){ge(this.log,"Experienced error starting",i);try{await s.stopEverything()}catch(o){ge(this.log,"Also experienced error stopping",o)}}return s}async startGQLRun(t,e){const s=this.instantiate(Object.assign(Object.assign({},t),{useGraphQL:!0}));try{const t=await s.autoStartGQL(e),i=bt(t.id_workflow_instance);this.runningInstances.set(i,s),this.log.debug(t)}catch(i){ge(this.log,"Experienced error starting",i);try{await s.stopEverything()}catch(o){ge(this.log,"Also experienced error stopping",o)}}return s}}async function me(t){return e.stat(t).then(t=>({type:"bytes",bytes:t.size}))}const ye=new Map([["fastq",function(t){return new Promise((s,i)=>{let o=1,n=-1,r={size:0};try{r=e.statSync(t)}catch(a){return void i(a)}e.createReadStream(t).on("data",t=>{n=-1,o-=1;do{n=t.indexOf(10,n+1),o+=1}while(-1!==n)}).on("end",()=>s({type:"fastq",bytes:r.size,reads:Math.floor(o/4)})).on("error",i)})}],["fasta",function(t){return new Promise((s,i)=>{let o=1,n=-1,r={size:0};try{r=e.statSync(t)}catch(a){i(a)}e.createReadStream(t).on("data",t=>{n=-1,o-=1;do{n=t.indexOf(62,n+1),o+=1}while(-1!==n)}).on("end",()=>s({type:"fasta",bytes:r.size,sequences:Math.floor((1+o)/2)})).on("error",i)})}],["fastqgz",function(t){return new Promise((s,i)=>{let o=1,n=-1,r={size:0};try{r=e.statSync(t)}catch(l){return void i(l)}const a=I();e.createReadStream(t).pipe(a).on("data",t=>{n=-1,o-=1;do{n=t.indexOf(10,n+1),o+=1}while(-1!==n)}).on("end",()=>s({type:"gz",bytes:r.size,reads:Math.floor(o/4)})).on("error",i)})}],["default",me]]),be=me,ke=new Map([["fq","fastq"],["fa","fasta"]]);async function ve(t){if(pt(t))return{type:"unknown",bytes:NaN};let e=c.extname(t).toLowerCase().replace(/^[.]/,"");const s=ke.get(e);if(s&&(e=s),"gz"===e){e=t.split(".").slice(1).reduce((t,e)=>{var s;return t+(null!==(s=ke.get(e))&&void 0!==s?s:e)},"")}let i=ye.get(e);return i||(i=be),i(t)}class Se extends ce{constructor(t,i){super({}),this.raiseExceptions=!!i,this.prefsFile=t||Se.profilePath(),this.allProfileData={};try{this.allProfileData=s({profiles:{}},e.readJSONSync(this.prefsFile)),this.allProfileData.endpoint&&(this.defaultEndpoint=this.allProfileData.endpoint)}catch(o){if(this.raiseExceptions)throw o}}static profilePath(){return c.join(a(),".epi2me.json")}profile(t,i){if(t&&i){s(this.allProfileData,{profiles:{[t]:i}});try{e.writeJSONSync(this.prefsFile,this.allProfileData)}catch(o){if(this.raiseExceptions)throw o}}if(t){if(!this.allProfileData.profiles)throw new Error("cannot read property");return s({endpoint:this.defaultEndpoint},this.allProfileData.profiles[t])}return{}}}class $e{constructor({bandwidth:t=1,interval:e=500,start:s=!0}){this.pipeline=[],this.running=[],this.completed=0,this.timer=null,this.bandwidth=t,this.interval=e,s&&this.start()}static MakeQueryablePromise(t){return"isResolved"in t?t:function(t){let e=!0,s=!1,i=!1;return t.then(()=>{e=!1,s=!0},()=>{e=!1,i=!0}),Object.assign(t,{isResolved:()=>s,isRejected:()=>i,isPending:()=>e})}(t)}enqueue(t){this.pipeline.push(t)}start(){this.timer||(this.timer=de(this.interval,()=>{this.monitorInterval()}))}stop(){this.timer&&(this.timer(),this.timer=null)}state(){return{queued:this.pipeline.length,running:this.running.length,completed:this.completed,state:this.timer?"running":"stopped"}}monitorInterval(){const t=this.running.length;this.running=this.running.filter(t=>t.isPending()),this.completed+=t-this.running.length;const e=this.bandwidth-this.running.length;for(let s=0;s<e;s+=1){const t=this.pipeline.shift();if(!t)return;this.running.push($e.MakeQueryablePromise(t()))}}}class _e extends he{async workflows(t){if(!this.options.local)return super.workflows(t);const s=c.join(this.options.url,"workflows");let i;try{return i=(await e.readdir(s)).filter(t=>e.statSync(c.join(s,t)).isDirectory()).map(t=>c.join(s,t,"workflow.json")).map(t=>e.readJsonSync(t)),t?t(null,i):i}catch(o){return this.log.warn(o),t?t(void 0,null):Promise.reject(void 0)}}async workflow(t,s,i){if(!this.options.local||!t||"object"===typeof t||i)return super.workflow(t,s,i);const o=c.join(this.options.url,"workflows"),n=c.join(o,t+"","workflow.json");return e.readJSON(n)}async workflowInstances(t,s){if(!this.options.local){if(at(t)||s)throw new Error("Local workflows cannot accept a callback");return super.workflowInstances(jt(t))}let i,o;if(!t||t instanceof Function||void 0!==s?(i=Pt(t),o=s):o=t,o){const t=new Error("querying of local instances unsupported in local mode");return i?i(t):Promise.reject(t)}const n=c.join(this.options.url,"instances");try{let t=await e.readdir(n);return t=t.filter(t=>e.statSync(c.join(n,t)).isDirectory()),t=t.map(t=>{const s=c.join(n,t,"workflow.json");let i;try{i=e.readJsonSync(s)}catch(o){i={id_workflow:"-",description:"-",rev:"0.0"}}return i.id_workflow_instance=t,i.filename=s,i}),i?i(null,t):t}catch(r){return i?i(r):Promise.reject(r)}}async datasets(t,s){let i,o;if(!t||t instanceof Function||void 0!==s?(i=_t(t),o=null!==s&&void 0!==s?s:{}):o=t,o.show||(o.show="mine"),!this.options.local){if(i)throw new Error("Callback is not supported in local mode");return super.datasets($t(t))}if("mine"!==o.show){const t=new Error("querying of local datasets unsupported in local mode");if(i)return i(t,null);throw t}const n=c.join(this.options.url,"datasets");try{const t=(await e.readdir(n)).filter(t=>e.statSync(c.join(n,t)).isDirectory());let s=0;const o=t.sort().map(t=>(s+=1,{is_reference_dataset:!0,summary:null,dataset_status:{status_label:"Active",status_value:"active"},size:0,prefix:t,id_workflow_instance:null,id_account:null,is_consented_human:null,data_fields:null,component_id:null,uuid:t,is_shared:!1,id_dataset:s,id_user:null,last_modified:null,created:null,name:t,source:t,attributes:null}));return i?i(null,o):o}catch(r){return this.log.warn(r),i?i(null,[]):[]}}async bundleWorkflow(t,e,s){return Ct.pipe(`workflow/bundle/${t}.tar.gz`,e,this.options,s)}}class Ee{constructor(){this.experiments={}}async getExperiments({sourceDir:t=Zt,refresh:e=!1}){return Object.keys(this.experiments).length&&!e||await this.updateExperiments(t),this.experiments}async updateExperiments(t=Zt){var e;const s=(new T).withBasePath().withErrors().filter(t=>t.includes("sequencing_summary")).exclude(t=>t.includes("fastq_")).withMaxDepth(3).crawl(t);let i;try{i=await s.withPromise()}catch(o){return}this.experiments={};for(const n of i){const[t,s]=n.split(c.sep).slice(-3),i=/(?<date>[0-9]{8})_(?<time>[0-9]{4})_.*_(?<flowcell>\w+\d+)_\w+/;if(!i.test(s))continue;const{date:o,time:r,flowcell:a}=null===(e=i.exec(s))||void 0===e?void 0:e.groups,l=`${o.slice(0,4)}-${o.slice(4,6)}-${o.slice(6,8)}`,h=`T${r.slice(0,2)}:${r.slice(2,4)}:00`,u=new Date(l+h),d={sample:s,flowcell:a,path:`${c.dirname(n)}/fastq_pass`},p=`${u.toDateString()} ${u.toLocaleTimeString()}`,f=this.experiments[t];f?(f.startDate=p,f.samples.push(d)):this.experiments[t]={startDate:p,samples:[d]}}}}class Ie{constructor(t,e,i,o,n){if(this.id_workflow_instance=t,this.children=i,this.options=s(o),this.log=this.options.log,this.REST=e,this.graphQL=n,!i||!i.length)throw new Error("must specify children to session")}async session(){var t;if(!(this.sts_expiration&&this.sts_expiration>Date.now())){this.log.debug("new instance token needed");try{let i;if(this.options.useGraphQL){const e={variables:{idWorkflowInstance:this.id_workflow_instance}};i=$t(null===(t=(await this.graphQL.instanceToken(e)).data)||void 0===t?void 0:t.token)}else i=await this.REST.instanceToken(this.id_workflow_instance,this.options);if(!ut(i.expiration)&&!(i.expiration instanceof Date))throw new Error("Invalid token expiration type");this.log.debug(`allocated new instance token expiring at ${i.expiration}`),this.sts_expiration=new Date(i.expiration).getTime()-60*parseInt(this.options.sessionGrace||"0",10);const o={};this.options.proxy&&s(o,{httpOptions:{agent:x(this.options.proxy)}}),s(o,{region:this.options.region},i);for(const t of this.children)try{t.config.update(o)}catch(e){this.log.warn(`failed to update config on ${String(t)}: ${String(e)}`)}}catch(i){this.log.warn(`failed to fetch instance token: ${String(i)}`)}}}}async function Te(t,i,o,n,r,a){const{maxChunkBytes:l,maxChunkReads:h}=s(i),u=c.dirname(t),d=c.basename(t),p=d.match(/^[^.]+/),f=p?p[0]:"",g=d.replace(f,""),w=c.join(u,f);if(!l&&!h)return o(t).then(()=>({source:t,split:!1,chunks:[t]}));const m=await e.stat(t);return l&&m.size<l?o(t).then(()=>({source:t,split:!1,chunks:[t]})):new Promise(i=>{let c,u,d=0,p=0,f="",m=0,y=0;const b={source:t,split:!0,chunks:[]};let k;const v=[new Promise(t=>{k=t})];O.createInterface({input:r(t)}).on("line",async t=>{p+=1,f+=t,f+="\n",p>=4&&(p=0,(async t=>{if(!m){d+=1,c=`${w}_${d}${g}`;const t=new Promise((t,s)=>{const i=c,r=()=>{o(i).then(()=>{t(i)}).catch(t=>{s(t)}).finally(()=>{e.unlink(i).catch(t=>{n.warn(`Error unlinking chunk ${i}: ${String(t)}`)})})};a?u=a(i,r):(u=e.createWriteStream(i),u.on("close",r))});v.push(t)}m+=1,y+=t.length,u.write(t,()=>{}),(l&&y>=l||h&&m>=h)&&(m=0,y=0,u.end())})(f),f="")}).on("close",()=>{u.end(),k(),Promise.all(v).then(t=>{t.shift(),i(s({chunks:t},b))})}).on("error",e=>{n.error(`Error chunking ${t}: ${String(e)}`)})})}async function xe(t,s,i,o){return Te(t,s,i,o,t=>e.createReadStream(t))}async function Oe(t,s,i,o){return Te(t,s,i,o,t=>e.createReadStream(t).pipe(E.createGunzip()),(t,s)=>{const i=e.createWriteStream(t);i.on("close",s);const o=E.createGzip();return o.pipe(i),o})}const je=new WeakSet,Pe=()=>{var t;const e=process.env.APPDATA||("darwin"===process.platform?c.join(a(),"Library/Application Support"):a());return null!==(t=process.env.EPI2ME_HOME)&&void 0!==t?t:c.join(e,"linux"===process.platform?".epi2me":"EPI2ME")};class Re extends fe{constructor(t){super(t),this.REST=new _e(this.config.options),this.SampleReader=new Ee,this.uploadsInProgress=[]}async sessionedS3(){return this.sessionManager||(this.sessionManager=this.initSessionManager()),await this.sessionManager.session(),new t.S3({useAccelerateEndpoint:"on"===this.config.options.awsAcceleration})}async sessionedSQS(){return this.sessionManager||(this.sessionManager=this.initSessionManager()),await this.sessionManager.session(),new t.SQS}async deleteMessage(t){try{const e=await this.discoverQueue(It(this.config.instance.outputQueueName));return(await this.sessionedSQS()).deleteMessage({QueueUrl:e,ReceiptHandle:gt(t.ReceiptHandle)}).promise()}catch(e){throw this.log.error(`deleteMessage exception: ${String(e)}`),this.states.download.failure||(this.states.download.failure={}),this.states.download.failure[e]=this.states.download.failure[e]?wt(this.states.download.failure[e])+1:1,e}}async discoverQueue(t=""){if(this.config.instance.discoverQueueCache[t])return gt(this.config.instance.discoverQueueCache[t]);let e;this.log.debug(`discovering queue for ${t}`);try{const s=await this.sessionedSQS();e=await s.getQueueUrl({QueueName:t}).promise()}catch(i){throw this.log.error(`Error: failed to find queue for ${t}: ${String(i)}`),i}const s=gt(e.QueueUrl);return this.log.debug(`found queue ${s}`),this.config.instance.discoverQueueCache[t]=s,s}async queueLength(t){var e;if(!t)throw new Error("no queueURL specified");const s=null===(e=t.match(/([\w\-_]+)$/))||void 0===e?void 0:e[0];this.log.debug(`querying queue length of ${s}`);try{const e=await this.sessionedSQS(),s=await e.getQueueAttributes({QueueUrl:t,AttributeNames:["ApproximateNumberOfMessages"]}).promise();if((null===s||void 0===s?void 0:s.Attributes)&&"ApproximateNumberOfMessages"in s.Attributes){const t=s.Attributes.ApproximateNumberOfMessages;return parseInt(t,10)}}catch(i){throw this.log.error(`error in getQueueAttributes ${String(i)}`),i}throw new Error("unexpected response")}async autoStart(t,e){const s=await this.autoStartGeneric(t,()=>this.REST.startWorkflow(t),e);return this.setClassConfigREST(s),this.autoConfigure(s,e)}async autoStartGQL(t,e){const s=await this.autoStartGeneric(t,()=>this.graphQL.startWorkflow({variables:t}),e);return this.setClassConfigGQL(s),this.autoConfigure(this.config.instance,e)}async autoStartGeneric(t,e,s){let i;this.stopped=!1;try{i=await e(),this.analyseState$.next(!0)}catch(o){const t=`Failed to start workflow: ${String(o)}`;throw this.log.warn(t),s&&s(t),o}return this.config.workflow=JSON.parse(JSON.stringify(t)),this.log.info(`instance ${JSON.stringify(i)}`),this.log.info(`workflow config ${JSON.stringify(this.config.workflow)}`),i}async autoJoin(t,e){let s;this.stopped=!1,this.config.instance.id_workflow_instance=t;try{s=await this.REST.workflowInstance(t)}catch(i){const t=`Failed to join workflow instance: ${String(i)}`;return this.log.warn(t),e?e(t):Promise.reject(i)}return"stopped"===s.state?(this.log.warn(`workflow ${t} is already stopped`),e?e("could not join workflow"):Promise.reject(new Error("could not join workflow"))):(this.config.workflow=this.config.workflow||{},this.log.debug(`instance ${JSON.stringify(s)}`),this.log.debug(`workflow config ${JSON.stringify(this.config.workflow)}`),this.setClassConfigREST(s),this.autoConfigure(s,e))}setClassConfigGQL(t){var e;const s=$t(null===(e=t.data)||void 0===e?void 0:e.startData),i=$t(s.instance),o=$t(i.workflowImage),{bucket:n,idUser:r,remoteAddr:a,userDefined:l={}}=s,{outputqueue:c,keyId:h,startDate:u,idWorkflowInstance:d,mappedTelemetry:p}=i,f=j(i.chain)?i.chain:$t(i.chain),g=$t(o.region).name,w=xt($t(o.workflow).idWorkflow),m=o.inputqueue,y={bucket:It(n),user_defined:jt(l),id_user:xt(r),remote_addr:It(a),id_workflow_instance:xt(d),key_id:It(h),start_date:It(u),outputQueueName:It(c),summaryTelemetry:jt(p),inputQueueName:It(m),id_workflow:w,region:gt(g,this.config.options.region),bucketFolder:`${c}/${r}/${d}`,chain:Ct.convertResponseToObject(f)};this.config.instance=Object.assign(Object.assign({},this.config.instance),y)}setClassConfigREST(t){const e=this.config.instance;e.id_workflow_instance=xt(t.id_workflow_instance),e.id_workflow=xt(t.id_workflow),e.remote_addr=It(t.remote_addr),e.key_id=It(t.key_id),e.bucket=It(t.bucket),e.user_defined=jt(t.user_defined),e.start_date=It(t.start_date),e.id_user=xt(t.id_user),e.inputQueueName=It(t.inputqueue),e.outputQueueName=It(t.outputqueue),e.region=gt(t.region,this.config.options.region),e.bucketFolder=`${t.outputqueue}/${t.id_user}/${t.id_workflow_instance}`,e.summaryTelemetry=jt(t.telemetry),t.chain&&(e.chain=Ct.convertResponseToObject($t(t.chain)))}initSessionManager(e,s=[]){return new Ie(bt(this.config.instance.id_workflow_instance),this.REST,[t,...s],Object.assign({sessionGrace:this.config.options.sessionGrace+"",proxy:this.config.options.proxy,region:this.config.instance.region,log:this.log,useGraphQL:this.config.options.useGraphQL},null!==e&&void 0!==e?e:{}),this.graphQL)}async autoConfigure(t,s){if(!this.config.options.inputFolders.length)throw new Error("must set inputFolder");if(!this.config.options.outputFolder)throw new Error("must set outputFolder");if(!this.config.instance.bucketFolder)throw new Error("bucketFolder must be set");if(!this.config.instance.inputQueueName)throw new Error("inputQueueName must be set");if(!this.config.instance.outputQueueName)throw new Error("outputQueueName must be set");e.mkdirpSync(this.config.options.outputFolder);const i=c.join(Pe(),"instances"),o=c.join(i,this.config.instance.id_workflow_instance+"");this.db=new Nt(o,{idWorkflowInstance:this.config.instance.id_workflow_instance,inputFolders:this.config.options.inputFolders},this.log);const n=this.config.instance.id_workflow_instance?`telemetry-${this.config.instance.id_workflow_instance}.log`:"telemetry.log",r=c.join(this.config.options.outputFolder,"epi2me-logs"),a=c.join(r,n);return e.mkdirp(r,t=>{if(t&&!String(t).match(/EEXIST/))this.log.error(`error opening telemetry log stream: mkdirpException:${String(t)}`);else try{this.telemetryLogStream=e.createWriteStream(a,{flags:"a"}),this.log.info(`logging telemetry to ${a}`)}catch(s){this.log.error(`error opening telemetry log stream: ${String(s)}`)}}),s&&s(""),this.timers.summaryTelemetryInterval=de(1e4*this.config.options.downloadCheckInterval,()=>{if(this.stopped){const t=this.timers.summaryTelemetryInterval;t&&t()}else this.fetchTelemetry()}),this.timers.downloadCheckInterval=de(1e3*this.config.options.downloadCheckInterval,()=>{if(this.stopped){const t=this.timers.downloadCheckInterval;t&&t()}else this.checkForDownloads()}),this.timers.stateCheckInterval=de(1e3*this.config.options.stateCheckInterval,async()=>{if(this.stopped){const t=this.timers.stateCheckInterval;t&&t()}else try{let e;if(this.config.options.useGraphQL){const t=await this.graphQL.query("query workflowInstance($idWorkflowInstance: ID!) {\n              instanceObj:workflowInstance(idWorkflowInstance: $idWorkflowInstance) {\n                stop_date: stopDate\n                state\n              }\n            }");e=$t($t((await t({variables:{idWorkflowInstance:this.config.instance.id_workflow_instance}})).data).instanceObj)}else e=await this.REST.workflowInstance(wt(this.config.instance.id_workflow_instance));if("stopped"===e.state){this.log.warn(`instance was stopped remotely at ${e.stop_date}. shutting down the workflow.`);try{await this.stopEverything();const t=Pt(this.config.options.remoteShutdownCb);t&&t(`instance was stopped remotely at ${e.stop_date}`)}catch(t){this.log.error(`Error whilst stopping: ${String(t)}`)}}}catch(e){this.log.warn(`failed to check instance state: ${(null===e||void 0===e?void 0:e.error)?e.error:e}`)}}),this.sessionManager=this.initSessionManager(),await this.sessionManager.session(),this.reportProgress(),this.loadUploadFiles(),this.uploadState$.next(!0),this.timers.fileCheckInterval=de(1e3*this.config.options.fileCheckInterval,this.loadUploadFiles.bind(this)),t}async stopUpload(){for(const t of this.uploadsInProgress)t.abort();this.uploadsInProgress=[],super.stopUpload(),this.log.debug("clearing split files"),this.db&&await this.db.splitClean()}async stopEverything(){delete this.sessionManager,await super.stopEverything()}async checkForDownloads(){if(!this.checkForDownloadsRunning){this.checkForDownloadsRunning=!0,this.log.debug("checkForDownloads checking for downloads");try{const t=await this.discoverQueue(It(this.config.instance.outputQueueName)),e=await this.queueLength(t);e?(this.log.debug(`downloads available: ${e}`),await this.downloadAvailable()):this.log.debug("no downloads available")}catch(t){this.log.warn(`checkForDownloads error ${String(t)}`),this.states.download.failure||(this.states.download.failure={}),this.states.download.failure[t]=this.states.download.failure[t]?wt(this.states.download.failure[t])+1:1}this.checkForDownloadsRunning=!1}}async downloadAvailable(){const t=Object.keys(this.downloadWorkerPool||{}).length;if(t>=this.config.options.transferPoolSize)return void this.log.debug(`${t} downloads already queued`);let e;try{const s=await this.discoverQueue(It(this.config.instance.outputQueueName));this.log.debug("fetching messages");const i=await this.sessionedSQS();e=await i.receiveMessage({AttributeNames:["All"],QueueUrl:s,VisibilityTimeout:this.config.options.inFlightDelay,MaxNumberOfMessages:this.config.options.transferPoolSize-t,WaitTimeSeconds:this.config.options.waitTimeSeconds}).promise()}catch(s){const t=s.toString();this.log.error(`receiveMessage exception: ${t}`);const e=this.states.download.failure;if(e){const s=e[t];e[t]=wt(s,0)+1}throw s}return this.receiveMessages(e)}async loadUploadFiles(){if(!this.dirScanInProgress){this.dirScanInProgress=!0,this.log.debug("upload: started directory scan");try{const t=async t=>{if(pt(this.db))throw new Error("Database has not been initialized");return function(t){if(lt(t))return t;if(ht(t))return 0!==t;if(ct(t))switch(t){case"true":return!0;case"false":return!1}throw new Error(`Unable to cast ${typeof t} to Boolean`)}(await this.db.seenUpload(t))},e=await Ct.loadInputFiles(this.config.options,this.log,t);let s=0;const i=()=>new Promise(t=>{if(this.stopped)return e.length=0,this.log.debug("upload: skipping, stopped"),void t();if(s>this.config.options.transferPoolSize)return void setTimeout(t,1e3);const i=e.splice(0,this.config.options.transferPoolSize-s);s+=i.length,this.enqueueUploadFiles(i).then().catch(t=>{this.log.error(`upload: exception in enqueueUploadFiles: ${String(t)}`)}).finally(()=>{s-=i.length,t()})});for(;e.length;)await i()}catch(t){this.log.error(`upload: exception in loadInputFiles: ${String(t)}`)}this.dirScanInProgress=!1,this.log.debug("upload: finished directory scan")}}async enqueueUploadFiles(t){let e=0,s=0,i=0,o=0,n={};if(!dt(t)||!t.length)return;this.log.info(`enqueueUploadFiles ${t.length} files: ${t.map(t=>t.path).join(" ")}.`);const r=jt(this.config.workflow);if(r){const t=jt(r.workflow_attributes),e=jt(r.attributes);if(t)n=t;else if(e&&("epi2me:max_size"in e&&(n.max_size=yt(e["epi2me:max_size"])),"epi2me:max_files"in e&&(n.max_files=yt(e["epi2me:max_files"])),"epi2me:split_size"in e&&(n.split_size=yt(e["epi2me:split_size"])),"epi2me:split_reads"in e&&(n.split_reads=yt(e["epi2me:split_reads"])),"epi2me:category"in e)){gt(e["epi2me:category"]).includes("storage")&&(n.requires_storage=!0)}}if(this.log.info(`enqueueUploadFiles settings ${JSON.stringify(n)}`),n.requires_storage){if(!r)throw new Error("Workflow isn't set");if(!("storage_account"in r)){const t={msg:"ERROR: Workflow requires storage enabled. Please provide a valid storage account [ --storage ].",type:"WARNING_STORAGE_ENABLED"};return this.log.error(t.msg),void this.states.warnings.push(t)}}if("split_size"in n&&(i=yt(n.split_size),this.log.info(`enqueueUploadFiles splitting supported files at ${i} bytes`)),"split_reads"in n&&(o=yt(n.split_reads),this.log.info(`enqueueUploadFiles splitting supported files at ${o} reads`)),"max_size"in n&&(s=yt(n.max_size),this.log.info(`enqueueUploadFiles restricting file size to ${s}`)),"max_files"in n&&(e=yt(n.max_files),this.log.info(`enqueueUploadFiles restricting file count to ${e}`),t.length>e)){const s={msg:`ERROR: ${t.length} files found. Workflow can only accept ${e}. Please move the extra files away.`,type:"WARNING_FILE_TOO_MANY"};return this.log.error(s.msg),void this.states.warnings.push(s)}this.states.upload.filesCount+=t.length;const a=t.map(async t=>{var n;if(e&&this.states.upload.filesCount>e){const s=`Maximum ${e} file(s) already uploaded. Marking ${t.relative} as skipped.`,i={msg:s,type:"WARNING_FILE_TOO_MANY"};this.log.error(s),this.states.warnings.push(i),this.states.upload.filesCount-=1,t.skip="SKIP_TOO_MANY"}else if(0===t.size){const e=`The file "${t.relative}" is empty. It will be skipped.`,s={msg:e,type:"WARNING_FILE_EMPTY"};t.skip="SKIP_EMPTY",this.states.upload.filesCount-=1,this.log.error(e),this.states.warnings.push(s)}else{if((null===(n=t.path)||void 0===n?void 0:n.match(/\.(?:fastq|fq)(?:\.gz)?$/))&&(i&&t.size>i||o)){const e=`${t.relative}${t.size>i?" is too big and":""} is going to be split`;this.log.warn(e);const s={msg:e,type:"WARNING_FILE_SPLIT"};this.states.warnings.push(s);const n=i?{maxChunkBytes:i}:{maxChunkReads:o},a=t.path.match(/\.gz$/)?Oe:xe,l=Ct.getFileID(),h=new $e({bandwidth:this.config.options.transferPoolSize});let u=0;const d=async e=>{if(this.log.debug(`chunkHandler for ${e}`),!this.db)throw new Error("Database is required but not initialized");if(await this.db.splitFile(e,t.path),this.stopped)return h.stop(),this.log.info(`stopped, so skipping ${e}`),Promise.reject(new Error("stopped"));u+=1;let s=null;for(const t of this.config.options.inputFolders)if(e.includes(t)){s=e.replace(t,"");break}const i=await ve(e),o={name:c.basename(e),path:e,relative:gt(s),id:`${l}_${u}`,stats:i,size:i.bytes},n=new Promise(t=>{h.enqueue(async()=>{if(this.log.info(`chunk upload starting ${o.id} ${o.path}`),this.stopped)return this.log.info(`chunk upload skipped (stopped) ${o.id} ${o.path}`),h.stop(),void t();try{if(await this.uploadJob(o),!this.db)throw new Error("Database is required but not initialized");await this.db.splitDone(o.path)}catch(e){this.log.error(`chunk upload failed ${o.id} ${o.path}: ${String(e)}`)}t()})});await n};try{await a(t.path,n,d,this.log),h.stop()}catch(r){if(h.stop(),"Error: stopped"===String(r))return;throw r}if(!this.db)throw new Error("Database is required but not initialized");return this.db.uploadFile(t.path)}if(s&&t.size>s){const e=`The file "${t.relative}" is bigger than the maximum size limit (${le(s)}B). It will be skipped.`,i={msg:e,type:"WARNING_FILE_TOO_BIG"};t.skip="SKIP_TOO_BIG",this.states.upload.filesCount-=1,this.log.error(e),this.states.warnings.push(i)}else try{t.stats=await ve(t.path)}catch(a){this.log.error(`failed to stat ${t.path}: ${String(a)}`)}}return this.uploadJob(t)});try{return await Promise.all(a),this.log.info(`upload: inputBatchQueue (${a.length} jobs) complete`),this.loadUploadFiles()}catch(l){throw this.log.error(`upload: enqueueUploadFiles exception ${String(l)}`),l}}async uploadJob(t){var e;if("skip"in t){if(!this.db)throw new Error("Database is required but not initialized");return void await this.db.skipFile(t.path)}let s,i=null;try{this.log.info(`upload: ${t.id} starting`),i=await this.uploadHandler(t),this.log.info(`upload: ${i.id} uploaded and notified`)}catch(o){s=o,this.log.error(`upload: ${t.id} done, but failed: ${String(s)}`)}if(s){if(this.log.error(`uploadJob ${s}`),this.states.upload.failure||(this.states.upload.failure={}),this.states.upload.failure[s]=this.states.upload.failure[s]?wt(this.states.upload.failure[s])+1:1,String(s).match(/AWS.SimpleQueueService.NonExistentQueue/))return this.log.error("instance stopped because of a fatal error"),this.stopEverything()}else{const t=null===i||void 0===i?void 0:i.stats,s={bytes:0,reads:0,sequences:0};if(t&&("reads"in t&&(s.reads=t.reads),"sequences"in t&&(s.sequences=t.sequences),s.bytes=null!==(e=t.bytes)&&void 0!==e?e:0),this.uploadState("success","incr",Object.assign({files:1},s)),null===i||void 0===i?void 0:i.name){const t=c.extname(i.name);this.uploadState("types","incr",{[t]:1})}}}async receiveMessages(t){if(!t||!t.Messages||!t.Messages.length)return void this.log.info("complete (empty)");this.downloadWorkerPool||(this.downloadWorkerPool={});const e=this.downloadWorkerPool;for(const s of t.Messages){const t=mt(s.MessageId);e[t]=1;const i=pe(1e3*(60+this.config.options.downloadTimeout),()=>{throw this.log.error(`this.downloadWorkerPool timeoutHandle. Clearing queue slot for message: ${s.MessageId}`),new Error("download timed out")});this.processMessage(s).catch(t=>{this.log.error(`processMessage ${String(t)}`)}).finally(()=>{i(),s&&delete e[t]})}this.log.info(`downloader queued ${t.Messages.length} messages for processing`)}async processMessage(t){var i,o,n;let r,a;if(!t)return void this.log.debug("download.processMessage: empty message");t.Attributes&&"ApproximateReceiveCount"in t.Attributes&&this.log.debug(`download.processMessage: ${t.MessageId} / ${t.Attributes.ApproximateReceiveCount}`);try{r=JSON.parse(gt(t.Body))}catch(m){this.log.error(`error parsing JSON message.Body from message: ${JSON.stringify(t)} ${String(m)}`);try{await this.deleteMessage(t)}catch(y){this.log.error(`Exception deleting message: ${String(y)}`)}return}if(r.telemetry){const e=$t(r.telemetry);if(e.tm_path)try{this.log.debug(`download.processMessage: ${t.MessageId} fetching telemetry`);const s=await this.sessionedS3(),i=await s.getObject({Bucket:gt(r.bucket),Key:gt(e.tm_path)}).promise();this.log.info(`download.processMessage: ${t.MessageId} fetched telemetry`);const o=i.Body;if(pt(o))throw new Error("Telemetry body is undefined");e.batch=o.toString("utf-8").split("\n").filter(t=>(null===t||void 0===t?void 0:t.length)>0).map(t=>{try{return JSON.parse(t)}catch(y){return this.log.error(`Telemetry Batch JSON Parse error: ${String(y)}`),t}})}catch(b){this.log.error(`Could not fetch telemetry JSON: ${String(b)}`)}try{if(!this.telemetryLogStream)throw new Error("Telemetry log stream is not initialized");this.telemetryLogStream.write(JSON.stringify(e)+l)}catch(k){this.log.error(`error writing telemetry: ${k}`)}this.config.options.telemetryCb&&this.config.options.telemetryCb(e)}if(!r.path)return void this.log.warn("nothing to download");const h=gt(r.path).match(/[\w\W]*\/([\w\W]*?)$/),u=h?h[1]:"",d=this.config.instance.id_workflow_instance;a=c.join(gt(this.config.options.outputFolder),pt(d)?"":mt(d));const p=jt(r.telemetry),f=jt(null===p||void 0===p?void 0:p.hints),g=It(null===f||void 0===f?void 0:f.folder);if(g){this.log.debug(`using folder hint ${g}`);const t=g.split("/").map(t=>t.toUpperCase());a=c.join.apply(null,[a,...t])}e.mkdirpSync(a);const w=c.join(a,u);if("data+telemetry"===this.config.options.downloadMode){const e=[""],s=jt(null===(i=this.config.workflow)||void 0===i?void 0:i.settings);let n=Et(null===s||void 0===s?void 0:s.output_format,gt,[]);("string"===typeof n||n instanceof String)&&(n=n.trim().split(/[\s,]+/));try{e.push(...n)}catch(y){this.log.error(`Failed to work out workflow file suffixes: ${String(y)}`)}try{const s=e.map(e=>{const s=r.path+e,i=w+e;return this.log.debug(`download.processMessage: ${t.MessageId} downloading ${s} to ${i}`),new Promise((o,n)=>{this.initiateDownloadStream({bucket:gt(r.bucket),path:s},t,i).then(o).catch(t=>{this.log.error(`Caught exception waiting for initiateDownloadStream: ${String(t)}`),e?n(t):o()})})});await Promise.all(s)}catch(y){this.log.error(`Exception fetching file batch: ${String(y)}`)}try{const t=null!==(o=null===p||void 0===p?void 0:p.json)&&void 0!==o&&o;t&&this.config.options.dataCb&&this.config.options.dataCb(w,t)}catch(b){this.log.warn(`failed to fire data callback: ${b}`)}}else{const t=jt(null===p||void 0===p?void 0:p.batch_summary),e=null!==(n=Tt(null===t||void 0===t?void 0:t.reads_num))&&void 0!==n?n:1;this.downloadState("success","incr",{files:1,reads:e})}try{await this.deleteMessage(t)}catch(y){this.log.error(`Exception deleting message: ${String(y)}`)}this.realtimeFeedback("workflow_instance:state",{type:"stop",id_workflow_instance:this.config.instance.id_workflow_instance,id_workflow:this.config.instance.id_workflow,component_id:"0",message_id:s(t).MessageId,id_user:this.config.instance.id_user}).catch(t=>{this.log.warn(`realtimeFeedback failed: ${String(t)}`)})}async initiateDownloadStream(t,s,i){return new Promise(async(o,n)=>{let r,a,l;try{r=await this.sessionedS3()}catch(d){n(d)}const h=s=>{if(this.log.error(`Error during stream of bucket=${t.bucket} path=${t.path} to file=${i} ${String(s)}`),this.stopTimeout("transferTimeouts",i),!je.has(a))try{je.add(a),a.close(),e.remove(i).then(()=>{this.log.warn(`removed failed download ${i}`)}).catch(t=>{this.log.warn(`failed to remove ${i}. unlinkException: ${String(t)}`)}),l instanceof e.ReadStream&&l.destroy&&(this.log.error(`destroying read stream for ${i}`),l.destroy())}catch(d){this.log.error(`error handling stream error: ${String(d)}`)}};try{const s={Bucket:t.bucket,Key:t.path};if(a=e.createWriteStream(i),!r)throw new Error("S3 is required but not initialized");const o=r.getObject(s);o.on("httpHeaders",(t,e)=>{this.downloadState("progress","incr",{total:parseInt(e["content-length"],10)})}),l=o.createReadStream()}catch(p){return this.log.error(`getObject/createReadStream exception: ${String(p)}`),void n(p)}l.on("error",h),a.on("finish",async()=>{if(!je.has(a)){this.log.debug(`downloaded ${i}`);try{const t=c.extname(i),e=await ve(i),s={bytes:e.bytes};"reads"in e&&(s.reads=e.reads),"sequences"in e&&(s.sequences=e.sequences),this.downloadState("success","incr",Object.assign({files:1},s)),this.downloadState("types","incr",{[t]:1}),this.downloadState("progress","decr",{total:e.bytes,bytes:e.bytes})}catch(t){this.log.warn(`failed to stat ${i}: ${String(t)}`)}this.reportProgress()}}),a.on("close",e=>{this.log.debug(`closing writeStream ${i}`),e&&this.log.error(`error closing write stream ${e}`);const n=this.timers.visibilityIntervals[i];n&&(n(),delete this.timers.visibilityIntervals[i]);const r=this.timers.transferTimeouts[i];r&&(r(),delete this.timers.transferTimeouts[i]),setTimeout(this.checkForDownloads.bind(this)),this.log.info(`download.initiateDownloadStream: ${s.MessageId} downloaded ${t.path} to ${i}`),o()}),a.on("error",h);const u=()=>{h(new Error("transfer timed out"))};this.timers.transferTimeouts[i]=pe(1e3*this.config.options.downloadTimeout,u);this.timers.visibilityIntervals[i]=de(900*this.config.options.inFlightDelay,async()=>{if(this.stopped){const t=this.timers.visibilityIntervals[i];t&&(t(),delete this.timers.visibilityIntervals[i])}const t=this.config.instance.outputQueueURL,e=s.ReceiptHandle;this.log.debug({message_id:s.MessageId},"updateVisibility");try{const s=await this.sessionedSQS();await s.changeMessageVisibility({QueueUrl:gt(t),ReceiptHandle:gt(e),VisibilityTimeout:this.config.options.inFlightDelay}).promise()}catch(o){this.log.error({message_id:s.MessageId,queue:t,error:o},"Error setting visibility");const e=this.timers.visibilityIntervals[i];e&&(e(),delete this.timers.visibilityIntervals[i])}}),l.on("data",t=>{const e=this.timers.transferTimeouts[i];e&&e(),this.timers.transferTimeouts[i]=pe(1e3*this.config.options.downloadTimeout,u),this.downloadState("progress","incr",{bytes:t.length})}).pipe(a)})}async uploadHandler(s){const i=await this.sessionedS3();let o,n=!1;const r=s.relative.replace(/^[\\/]+/,"").replace(/\\/g,"/").replace(/\//g,"_"),a=[this.config.instance.bucketFolder,"component-0",r,r].join("/").replace(/\/+/g,"/");let l;return new Promise((r,c)=>{const h=()=>{o&&!n&&o.close(),c(new Error(`${s.name} timed out`))};l=pe(1e3*(this.config.options.uploadTimeout+5),h);try{o=e.createReadStream(s.path),o.on("close",()=>{n=!0})}catch(u){return l(),void c(u)}o.on("error",t=>{o.close();let e="error in upload readstream";(null===t||void 0===t?void 0:t.message)&&(e+=`: ${t.message}`),l(),c(new Error(e))}),o.on("open",async()=>{var e;const n={Bucket:gt(this.config.instance.bucket),Key:a,Body:o},u=new t.S3,d={partSize:10485760,queueSize:1,service:u};this.config.instance.key_id&&(n.SSEKMSKeyId=this.config.instance.key_id,n.ServerSideEncryption="aws:kms"),s.size&&(n["Content-Length"]=s.size),this.uploadState("progress","incr",{total:s.size});let p=0;const f=i.upload(n,d);this.uploadsInProgress.push(f);const g=this.initSessionManager(null,[u]);g.sts_expiration=null===(e=this.sessionManager)||void 0===e?void 0:e.sts_expiration,f.on("httpUploadProgress",async t=>{this.uploadState("progress","incr",{bytes:t.loaded-p}),p=t.loaded,l(),l=pe(1e3*(this.config.options.uploadTimeout+5),h);try{await g.session()}catch(e){this.log.warn(`Error refreshing token: ${String(e)}`)}});try{await f.promise(),this.log.info(`${s.id} S3 upload complete`),o.close(),l(),await this.uploadComplete(a,s),r(s)}catch(w){this.log.warn(`${s.id} uploadStreamError ${w}`),c(w)}finally{this.uploadState("progress","decr",{total:s.size,bytes:s.size}),this.uploadsInProgress=this.uploadsInProgress.filter(t=>t!==f)}})})}async uploadComplete(t,e){this.log.info(`${e.id} uploaded to S3: ${t}`);const i={bucket:this.config.instance.bucket,outputQueue:this.config.instance.outputQueueName,remote_addr:this.config.instance.remote_addr,user_defined:this.config.instance.user_defined,apikey:this.config.options.apikey,id_workflow_instance:this.config.instance.id_workflow_instance,id_master:this.config.instance.id_workflow,utc:(new Date).toISOString(),path:t,prefix:t.substring(0,t.lastIndexOf("/"))};if(this.config.instance.chain)try{i.components=JSON.parse(JSON.stringify(this.config.instance.chain.components)),i.targetComponentId=this.config.instance.chain.targetComponentId}catch(n){return this.log.error(`${e.id} exception parsing components JSON ${String(n)}`),Promise.reject(n)}if(this.config.instance.key_id&&(i.key_id=this.config.instance.key_id),this.config.options.agent_address)try{i.agent_address=JSON.parse(this.config.options.agent_address)}catch(r){this.log.error(`${e.id} Could not parse agent_address ${String(r)}`)}if(i.components){const t=function(t,e,s){if(ft(t)&&"undefined"!==typeof s)return s;if("object"===typeof t&&!1===Array.isArray(t)){const s=$t(t),i={};for(const o in t)i[o]=e(s[o]);return i}throw new Error(`Unable to cast ${typeof t} to Record`)}(i.components,$t);for(const e of Object.values(t))switch(null===e||void 0===e?void 0:e.inputQueueName){case"uploadMessageQueue":e.inputQueueName=this.uploadMessageQueue;break;case"downloadMessageQueue":e.inputQueueName=this.downloadMessageQueue}}let o={};try{const t=await this.discoverQueue(It(this.config.instance.inputQueueName)),s=await this.sessionedSQS();this.log.info(`${e.id} sending SQS message to input queue`),o=await s.sendMessage({QueueUrl:t,MessageBody:JSON.stringify(i)}).promise()}catch(a){return this.log.error(`${e.id} exception sending SQS message: ${String(a)}`),Promise.reject(a)}if(this.realtimeFeedback("workflow_instance:state",{type:"start",id_workflow_instance:this.config.instance.id_workflow_instance,id_workflow:this.config.instance.id_workflow,component_id:"0",message_id:s(o).MessageId,id_user:this.config.instance.id_user}).catch(t=>{this.log.warn(`realtimeFeedback failed: ${String(t)}`)}),this.log.info(`${e.id} SQS message sent. Mark as uploaded`),!this.db)throw new Error("Database has not been instantiated");return this.db.uploadFile(e.path)}async fetchTelemetry(){var t,s;if(!(null===(s=null===(t=this.config)||void 0===t?void 0:t.instance)||void 0===s?void 0:s.summaryTelemetry))return;const i=c.join(Pe(),"instances"),o=c.join(i,this.config.instance.id_workflow_instance+""),n=[],r=$t(this.config.instance.summaryTelemetry);Object.keys(r).forEach(t=>{var s;const i=null!==(s=$t(r[t]))&&void 0!==s?s:{};let a=It(i[Object.keys(i)[0]]);if(!a)return;a.startsWith("http")||(a=D(this.config.options.url,a));const l=c.join(o,`${t}.json`);n.push(this.REST.fetchContent(a).then(t=>(e.writeJSONSync(l,t),this.reportState$.next(!0),this.log.debug(`fetched telemetry summary ${l}`),t)).catch(t=>{this.log.debug(`Error fetching telemetry: ${String(t)}`)}))});let a=0;try{const t=await Promise.all(n);this.instanceTelemetry$.next(t)}catch(l){a+=1}a&&this.log.warn("summary telemetry incomplete")}}Re.version=Ct.version,Re.REST=_e,Re.utils=Ct,Re.SessionManager=Ie,Re.EPI2ME_HOME=Pe(),Re.Profile=Se,Re.Factory=we;const Ae=Ct.version,Ce=Re.EPI2ME_HOME;export{Re as EPI2ME,Ce as EPI2ME_HOME,we as Factory,Se as Profile,_e as REST,Ie as SessionManager,Ct as utils,Ae as version};
